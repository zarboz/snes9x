# Makefile.in generated by automake 1.14.1 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/snes9x-gtk
pkgincludedir = $(includedir)/snes9x-gtk
pkglibdir = $(libdir)/snes9x-gtk
pkglibexecdir = $(libexecdir)/snes9x-gtk
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = snes9x-gtk$(EXEEXT)
am__append_1 = \
    ../filter/hq2x.cpp \
    ../filter/hq2x.h

#am__append_2 = \
#    src/gtk_sound_driver_portaudio.cpp \
#    src/gtk_sound_driver_portaudio.h

am__append_3 = \
    src/gtk_sound_driver_pulse.cpp \
    src/gtk_sound_driver_pulse.h

am__append_4 = \
    src/gtk_sound_driver_oss.h \
    src/gtk_sound_driver_oss.cpp

am__append_5 = \
    src/gtk_sound_driver_sdl.h \
    src/gtk_sound_driver_sdl.cpp

am__append_6 = \
    src/gtk_sound_driver_alsa.h \
    src/gtk_sound_driver_alsa.cpp

#am__append_7 = \
#    ../i386/fxemu2b.asm \
#    ../i386/fxemu2.asm \
#    ../i386/fxemu2c.asm \
#    ../i386/fxtable.asm \
#    ../i386/sfxproc.asm \
#    ../i386/zsnes.asm

am__append_8 = \
    ../fxinst.cpp \
    ../fxemu.cpp \
    ../fxdbg.cpp

#am__append_9 = \
#    ../i386/c4.asm \
#    ../i386/zsnesc4.asm \
#    ../c4.cpp

am__append_10 = \
    ../c4.cpp \
    ../c4emu.cpp

am__append_11 = ../sdd1emu.cpp
am__append_12 = \
    ../netplay.cpp \
    ../server.cpp

am__append_13 = libjma.a
am__append_14 = libjma.a
am__append_15 = \
    src/gtk_display_driver_opengl.cpp \
    src/gtk_display_driver_opengl.h

am__append_16 = \
    src/gtk_display_driver_xv.cpp \
    src/gtk_display_driver_xv.h

am__append_17 = \
    src/gtk_netplay_dialog.cpp \
    src/gtk_netplay_dialog.h \
    src/gtk_netplay.cpp \
    src/gtk_netplay.h

subdir = .
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/configure $(am__configure_deps) depcomp AUTHORS \
	compile install-sh missing
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libjma_a_AR = $(AR) $(ARFLAGS)
libjma_a_LIBADD =
am__libjma_a_SOURCES_DIST = ../jma/s9x-jma.cpp ../jma/7zlzma.cpp \
	../jma/crc32.cpp ../jma/iiostrm.cpp ../jma/inbyte.cpp \
	../jma/jma.cpp ../jma/lzma.cpp ../jma/lzmadec.cpp \
	../jma/winout.cpp
am__dirstamp = $(am__leading_dot)dirstamp
am_libjma_a_OBJECTS = ../jma/libjma_a-s9x-jma.$(OBJEXT) \
	../jma/libjma_a-7zlzma.$(OBJEXT) \
	../jma/libjma_a-crc32.$(OBJEXT) \
	../jma/libjma_a-iiostrm.$(OBJEXT) \
	../jma/libjma_a-inbyte.$(OBJEXT) \
	../jma/libjma_a-jma.$(OBJEXT) \
	../jma/libjma_a-lzma.$(OBJEXT) \
	../jma/libjma_a-lzmadec.$(OBJEXT) \
	../jma/libjma_a-winout.$(OBJEXT)
libjma_a_OBJECTS = $(am_libjma_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__snes9x_gtk_SOURCES_DIST = src/gtk_sound_driver.h \
	../filter/2xsai.cpp ../filter/2xsai.h ../filter/epx.cpp \
	../filter/epx.h src/filter_epx_unsafe.h \
	src/filter_epx_unsafe.cpp src/gtk_binding.cpp \
	src/gtk_binding.h src/gtk_cheat.cpp src/gtk_cheat.h \
	src/gtk_config.cpp src/gtk_config.h src/gtk_control.cpp \
	src/gtk_control.h src/gtk_display.cpp \
	src/gtk_display_driver_gtk.cpp src/gtk_display_driver_gtk.h \
	src/gtk_display_driver.h src/gtk_display.h src/gtk_file.cpp \
	src/gtk_file.h src/gtk_snes9x_ui.cpp \
	src/gtk_builder_window.cpp src/gtk_builder_window.h \
	src/gtk_preferences.cpp src/gtk_preferences.h \
	src/gtk_s9xcore.h src/gtk_s9x.cpp src/gtk_s9x.h \
	src/gtk_s9xwindow.cpp src/gtk_s9xwindow.h src/gtk_sound.cpp \
	src/gtk_sound.h src/gtk_splash.h src/snes_ntsc_config.h \
	src/snes_ntsc.h src/snes_ntsc_impl.h src/snes_ntsc.c \
	../filter/hq2x.cpp ../filter/hq2x.h \
	src/gtk_sound_driver_portaudio.cpp \
	src/gtk_sound_driver_portaudio.h \
	src/gtk_sound_driver_pulse.cpp src/gtk_sound_driver_pulse.h \
	src/gtk_sound_driver_oss.h src/gtk_sound_driver_oss.cpp \
	src/gtk_sound_driver_sdl.h src/gtk_sound_driver_sdl.cpp \
	src/gtk_sound_driver_alsa.h src/gtk_sound_driver_alsa.cpp \
	../i386/fxemu2b.asm ../i386/fxemu2.asm ../i386/fxemu2c.asm \
	../i386/fxtable.asm ../i386/sfxproc.asm ../i386/zsnes.asm \
	../fxinst.cpp ../fxemu.cpp ../fxdbg.cpp ../i386/c4.asm \
	../i386/zsnesc4.asm ../c4.cpp ../c4emu.cpp ../apu/apu.cpp \
	../apu/bapu/dsp/sdsp.cpp ../apu/bapu/dsp/SPC_DSP.cpp \
	../apu/bapu/smp/smp.cpp ../apu/bapu/smp/smp_state.cpp \
	../dsp.cpp ../dsp1.cpp ../dsp2.cpp ../dsp3.cpp ../dsp4.cpp \
	../spc7110.cpp ../obc1.cpp ../seta.cpp ../seta010.cpp \
	../seta011.cpp ../seta018.cpp ../controls.cpp \
	../crosshairs.cpp ../cpu.cpp ../sa1.cpp ../debug.cpp \
	../sdd1.cpp ../tile.cpp ../srtc.cpp ../gfx.cpp ../memmap.cpp \
	../clip.cpp ../ppu.cpp ../dma.cpp ../snes9x.cpp ../globals.cpp \
	../stream.cpp ../conffile.cpp ../bsx.cpp ../logger.cpp \
	../snapshot.cpp ../screenshot.cpp ../movie.cpp ../cpuops.cpp \
	../cpuexec.cpp ../sa1cpu.cpp ../cheats.cpp ../cheats2.cpp \
	../sdd1emu.cpp ../netplay.cpp ../server.cpp ../loadzip.cpp \
	../unzip/unzip.c ../unzip/ioapi.c ../unzip/zip.c \
	src/gtk_display_driver_opengl.cpp \
	src/gtk_display_driver_opengl.h src/gtk_display_driver_xv.cpp \
	src/gtk_display_driver_xv.h src/gtk_netplay_dialog.cpp \
	src/gtk_netplay_dialog.h src/gtk_netplay.cpp src/gtk_netplay.h
am__objects_1 = ../filter/snes9x_gtk-hq2x.$(OBJEXT)
#am__objects_2 = src/snes9x_gtk-gtk_sound_driver_portaudio.$(OBJEXT)
am__objects_3 = src/snes9x_gtk-gtk_sound_driver_pulse.$(OBJEXT)
am__objects_4 =  \
	src/snes9x_gtk-gtk_sound_driver_oss.$(OBJEXT)
am__objects_5 =  \
	src/snes9x_gtk-gtk_sound_driver_sdl.$(OBJEXT)
am__objects_6 =  \
	src/snes9x_gtk-gtk_sound_driver_alsa.$(OBJEXT)
#am__objects_7 = ../i386/fxemu2b.$(OBJEXT) \
#	../i386/fxemu2.$(OBJEXT) \
#	../i386/fxemu2c.$(OBJEXT) \
#	../i386/fxtable.$(OBJEXT) \
#	../i386/sfxproc.$(OBJEXT) \
#	../i386/zsnes.$(OBJEXT)
am__objects_8 = ../snes9x_gtk-fxinst.$(OBJEXT) \
	../snes9x_gtk-fxemu.$(OBJEXT) \
	../snes9x_gtk-fxdbg.$(OBJEXT)
#am__objects_9 = ../i386/c4.$(OBJEXT) \
#	../i386/zsnesc4.$(OBJEXT) \
#	../snes9x_gtk-c4.$(OBJEXT)
am__objects_10 = ../snes9x_gtk-c4.$(OBJEXT) \
	../snes9x_gtk-c4emu.$(OBJEXT)
am__objects_11 = ../snes9x_gtk-sdd1emu.$(OBJEXT)
am__objects_12 = ../snes9x_gtk-netplay.$(OBJEXT) \
	../snes9x_gtk-server.$(OBJEXT)
am__objects_13 = src/snes9x_gtk-gtk_display_driver_opengl.$(OBJEXT)
am__objects_14 =  \
	src/snes9x_gtk-gtk_display_driver_xv.$(OBJEXT)
am__objects_15 =  \
	src/snes9x_gtk-gtk_netplay_dialog.$(OBJEXT) \
	src/snes9x_gtk-gtk_netplay.$(OBJEXT)
am_snes9x_gtk_OBJECTS = ../filter/snes9x_gtk-2xsai.$(OBJEXT) \
	../filter/snes9x_gtk-epx.$(OBJEXT) \
	src/snes9x_gtk-filter_epx_unsafe.$(OBJEXT) \
	src/snes9x_gtk-gtk_binding.$(OBJEXT) \
	src/snes9x_gtk-gtk_cheat.$(OBJEXT) \
	src/snes9x_gtk-gtk_config.$(OBJEXT) \
	src/snes9x_gtk-gtk_control.$(OBJEXT) \
	src/snes9x_gtk-gtk_display.$(OBJEXT) \
	src/snes9x_gtk-gtk_display_driver_gtk.$(OBJEXT) \
	src/snes9x_gtk-gtk_file.$(OBJEXT) \
	src/snes9x_gtk-gtk_snes9x_ui.$(OBJEXT) \
	src/snes9x_gtk-gtk_builder_window.$(OBJEXT) \
	src/snes9x_gtk-gtk_preferences.$(OBJEXT) \
	src/snes9x_gtk-gtk_s9x.$(OBJEXT) \
	src/snes9x_gtk-gtk_s9xwindow.$(OBJEXT) \
	src/snes9x_gtk-gtk_sound.$(OBJEXT) src/snes_ntsc.$(OBJEXT) \
	$(am__objects_1) $(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_5) $(am__objects_6) \
	$(am__objects_7) $(am__objects_8) $(am__objects_9) \
	$(am__objects_10) ../apu/snes9x_gtk-apu.$(OBJEXT) \
	../apu/bapu/dsp/snes9x_gtk-sdsp.$(OBJEXT) \
	../apu/bapu/dsp/snes9x_gtk-SPC_DSP.$(OBJEXT) \
	../apu/bapu/smp/snes9x_gtk-smp.$(OBJEXT) \
	../apu/bapu/smp/snes9x_gtk-smp_state.$(OBJEXT) \
	../snes9x_gtk-dsp.$(OBJEXT) ../snes9x_gtk-dsp1.$(OBJEXT) \
	../snes9x_gtk-dsp2.$(OBJEXT) ../snes9x_gtk-dsp3.$(OBJEXT) \
	../snes9x_gtk-dsp4.$(OBJEXT) ../snes9x_gtk-spc7110.$(OBJEXT) \
	../snes9x_gtk-obc1.$(OBJEXT) ../snes9x_gtk-seta.$(OBJEXT) \
	../snes9x_gtk-seta010.$(OBJEXT) \
	../snes9x_gtk-seta011.$(OBJEXT) \
	../snes9x_gtk-seta018.$(OBJEXT) \
	../snes9x_gtk-controls.$(OBJEXT) \
	../snes9x_gtk-crosshairs.$(OBJEXT) ../snes9x_gtk-cpu.$(OBJEXT) \
	../snes9x_gtk-sa1.$(OBJEXT) ../snes9x_gtk-debug.$(OBJEXT) \
	../snes9x_gtk-sdd1.$(OBJEXT) ../snes9x_gtk-tile.$(OBJEXT) \
	../snes9x_gtk-srtc.$(OBJEXT) ../snes9x_gtk-gfx.$(OBJEXT) \
	../snes9x_gtk-memmap.$(OBJEXT) ../snes9x_gtk-clip.$(OBJEXT) \
	../snes9x_gtk-ppu.$(OBJEXT) ../snes9x_gtk-dma.$(OBJEXT) \
	../snes9x_gtk-snes9x.$(OBJEXT) ../snes9x_gtk-globals.$(OBJEXT) \
	../snes9x_gtk-stream.$(OBJEXT) \
	../snes9x_gtk-conffile.$(OBJEXT) ../snes9x_gtk-bsx.$(OBJEXT) \
	../snes9x_gtk-logger.$(OBJEXT) \
	../snes9x_gtk-snapshot.$(OBJEXT) \
	../snes9x_gtk-screenshot.$(OBJEXT) \
	../snes9x_gtk-movie.$(OBJEXT) ../snes9x_gtk-cpuops.$(OBJEXT) \
	../snes9x_gtk-cpuexec.$(OBJEXT) ../snes9x_gtk-sa1cpu.$(OBJEXT) \
	../snes9x_gtk-cheats.$(OBJEXT) ../snes9x_gtk-cheats2.$(OBJEXT) \
	$(am__objects_11) $(am__objects_12) \
	../snes9x_gtk-loadzip.$(OBJEXT) ../unzip/unzip.$(OBJEXT) \
	../unzip/ioapi.$(OBJEXT) ../unzip/zip.$(OBJEXT) \
	$(am__objects_13) $(am__objects_14) $(am__objects_15)
snes9x_gtk_OBJECTS = $(am_snes9x_gtk_OBJECTS)
snes9x_gtk_DEPENDENCIES = $(am__append_13)
snes9x_gtk_LINK = $(CXXLD) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libjma_a_SOURCES) $(snes9x_gtk_SOURCES)
DIST_SOURCES = $(am__libjma_a_SOURCES_DIST) \
	$(am__snes9x_gtk_SOURCES_DIST)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	cscope distdir dist dist-all distcheck
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = aclocal-1.14
ALL_LINGUAS = 
ALSA_CFLAGS = -I/usr/include/alsa  
ALSA_LIBS = -lasound  
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = autoconf
AUTOHEADER = autoheader
AUTOMAKE = automake-1.14
AWK = gawk
CATALOGS = 
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Os -pipe -Wall -W -pedantic -Wno-unused-parameter -fomit-frame-pointer -DUSE_OPENGL -DUSE_JOYSTICK -DUSE_XV -DUSE_OSS -DUSE_ALSA -DUSE_PULSEAUDIO -DUSE_XRANDR -DHAVE_LIBPNG -DUSE_HQ2X -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include   -I/usr/include/libxml2    -I/usr/include/libpng12   -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL       -I/usr/include/alsa   -D_REENTRANT   -DCORRECT_VRAM_READS -DSDD1_DECOMP -DNETPLAY_SUPPORT -DJMA_SUPPORT -DZLIB -DHAVE_MKSTEMP -DHAVE_STRINGS_H -DHAVE_SYS_IOCTL_H -DHAVE_STDINT_H -DPTR_NOT_INT -DRIGHTSHIFT_int8_IS_SAR -DRIGHTSHIFT_int16_IS_SAR -DRIGHTSHIFT_int32_IS_SAR -DRIGHTSHIFT_int64_IS_SAR -DRIGHTSHIFT_IS_SAR -DUNZIP_SUPPORT -DSPC700_C -I. -I.. -I../unzip
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -Os -pipe -Wall -W -pedantic -Wno-unused-parameter -fomit-frame-pointer -DUSE_OPENGL -DUSE_JOYSTICK -DUSE_XV -DUSE_OSS -DUSE_ALSA -DUSE_PULSEAUDIO -DUSE_XRANDR -DHAVE_LIBPNG -DUSE_HQ2X -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz   -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include   -I/usr/include/libxml2    -I/usr/include/libpng12   -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL       -I/usr/include/alsa   -D_REENTRANT   -DCORRECT_VRAM_READS -DSDD1_DECOMP -DNETPLAY_SUPPORT -DJMA_SUPPORT -DZLIB -DHAVE_MKSTEMP -DHAVE_STRINGS_H -DHAVE_SYS_IOCTL_H -DHAVE_STDINT_H -DPTR_NOT_INT -DRIGHTSHIFT_int8_IS_SAR -DRIGHTSHIFT_int16_IS_SAR -DRIGHTSHIFT_int32_IS_SAR -DRIGHTSHIFT_int64_IS_SAR -DRIGHTSHIFT_IS_SAR -DUNZIP_SUPPORT -DSPC700_C -I. -I.. -I../unzip
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DPACKAGE_NAME=\"snes9x-gtk\" -DPACKAGE_TARNAME=\"snes9x-gtk\" -DPACKAGE_VERSION=\"1.53\" -DPACKAGE_STRING=\"snes9x-gtk\ 1.53\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"snes9x-gtk\" -DVERSION=\"1.53\" -DGETTEXT_PACKAGE=\"snes9x-gtk\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_LOCALE_H=1 -DHAVE_LC_MESSAGES=1 -DHAVE_BIND_TEXTDOMAIN_CODESET=1 -DHAVE_GETTEXT=1 -DHAVE_DCGETTEXT=1 -DENABLE_NLS=1 -DHAVE_ZLIB_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GETTEXT_PACKAGE = snes9x-gtk
GLIB_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include  
GLIB_LIBS = -pthread -lgthread-2.0 -lgobject-2.0 -lglib-2.0  
GMOFILES = 
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GTK_CFLAGS = -pthread -I/usr/include/gtk-2.0 -I/usr/lib/x86_64-linux-gnu/gtk-2.0/include -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/pango-1.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/freetype2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/libpng12 -I/usr/include/harfbuzz  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLLIBS = 
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
INTLTOOL_V_MERGE = $(INTLTOOL__v_MERGE_$(V))
INTLTOOL_V_MERGE_OPTIONS = $(intltool__v_merge_options_$(V))
INTLTOOL__v_MERGE_ = $(INTLTOOL__v_MERGE_$(AM_DEFAULT_VERBOSITY))
INTLTOOL__v_MERGE_0 = @echo "  ITMRG " $@;
LDFLAGS = 
LIBOBJS = 
LIBPNG_CFLAGS = -I/usr/include/libpng12  
LIBPNG_LIBS = -lpng12  
LIBS =  -lX11 -ldl -lXext -lGL -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgio-2.0 -lpangoft2-1.0 -lpangocairo-1.0 -lgdk_pixbuf-2.0 -lcairo -lpango-1.0 -lfontconfig -lgobject-2.0 -lglib-2.0 -lfreetype   -pthread -lgthread-2.0 -lgobject-2.0 -lglib-2.0   -lxml2    -lpng12   -lSDL   -lXv   -lXrandr   -lasound   -lpulse-simple -lpulse   -lz
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LTLIBOBJS = 
MAKEINFO = makeinfo
MKDIR_P = /bin/mkdir -p
MKINSTALLDIRS = ./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGFMT_OPTS = -c
MSGMERGE = /usr/bin/msgmerge
NASM = not_found
NASM_FLAGS = 
OBJEXT = o
PACKAGE = snes9x-gtk
PACKAGE_BUGREPORT = 
PACKAGE_NAME = snes9x-gtk
PACKAGE_STRING = snes9x-gtk 1.53
PACKAGE_TARNAME = snes9x-gtk
PACKAGE_URL = 
PACKAGE_VERSION = 1.53
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POFILES = 
PORTAUDIO_CFLAGS = 
PORTAUDIO_LIBS = 
POSUB = po
PO_IN_DATADIR_FALSE = 
PO_IN_DATADIR_TRUE = 
PULSEAUDIO_CFLAGS = -D_REENTRANT  
PULSEAUDIO_LIBS = -lpulse-simple -lpulse  
RANLIB = ranlib
SDLCONFIGFOUND = 
SDL_CFLAGS = -D_GNU_SOURCE=1 -D_REENTRANT -I/usr/include/SDL  
SDL_LIBS = -lSDL  
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 1.53
XGETTEXT = /usr/bin/xgettext
XRANDR_CFLAGS =  
XRANDR_LIBS = -lXrandr  
XV_CFLAGS =  
XV_LIBS = -lXv  
abs_builddir = /home/zarboz/Desktop/snes9x-1.53/snes9x/gtk
abs_srcdir = /home/zarboz/Desktop/snes9x-1.53/snes9x/gtk
abs_top_builddir = /home/zarboz/Desktop/snes9x-1.53/snes9x/gtk
abs_top_srcdir = /home/zarboz/Desktop/snes9x-1.53/snes9x/gtk
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/zarboz/install-sh
intltool__v_merge_options_ = $(intltool__v_merge_options_$(AM_DEFAULT_VERBOSITY))
intltool__v_merge_options_0 = -q
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
snes9xlocaledir = ${prefix}/${DATADIRNAME}/locale
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = 
top_builddir = .
top_srcdir = .
SUBDIRS = data po
snes9x_gtk_LDADD = $(am__append_13)
snes9x_gtk_CXXFLAGS = -fno-exceptions -fno-rtti
noinst_LIBRARIES = $(am__append_14)
AM_CPPFLAGS = -I../apu/bapu -I$(top_srcdir) -I.. -DSNES9XLOCALEDIR=\""$(snes9xlocaledir)"\"
CLEANFILES = \
    src/gtk_snes9x_ui.cpp \
    src/sourcify


# APU

# Byuu's APU

# DSP

# Base

# ASMCPU Doesn't exist anymore.

# Zip support is nonconfigurable.
snes9x_gtk_SOURCES = src/gtk_sound_driver.h ../filter/2xsai.cpp \
	../filter/2xsai.h ../filter/epx.cpp ../filter/epx.h \
	src/filter_epx_unsafe.h src/filter_epx_unsafe.cpp \
	src/gtk_binding.cpp src/gtk_binding.h src/gtk_cheat.cpp \
	src/gtk_cheat.h src/gtk_config.cpp src/gtk_config.h \
	src/gtk_control.cpp src/gtk_control.h src/gtk_display.cpp \
	src/gtk_display_driver_gtk.cpp src/gtk_display_driver_gtk.h \
	src/gtk_display_driver.h src/gtk_display.h src/gtk_file.cpp \
	src/gtk_file.h src/gtk_snes9x_ui.cpp \
	src/gtk_builder_window.cpp src/gtk_builder_window.h \
	src/gtk_preferences.cpp src/gtk_preferences.h \
	src/gtk_s9xcore.h src/gtk_s9x.cpp src/gtk_s9x.h \
	src/gtk_s9xwindow.cpp src/gtk_s9xwindow.h src/gtk_sound.cpp \
	src/gtk_sound.h src/gtk_splash.h src/snes_ntsc_config.h \
	src/snes_ntsc.h src/snes_ntsc_impl.h src/snes_ntsc.c \
	$(am__append_1) $(am__append_2) $(am__append_3) \
	$(am__append_4) $(am__append_5) $(am__append_6) \
	$(am__append_7) $(am__append_8) $(am__append_9) \
	$(am__append_10) ../apu/apu.cpp ../apu/bapu/dsp/sdsp.cpp \
	../apu/bapu/dsp/SPC_DSP.cpp ../apu/bapu/smp/smp.cpp \
	../apu/bapu/smp/smp_state.cpp ../dsp.cpp ../dsp1.cpp \
	../dsp2.cpp ../dsp3.cpp ../dsp4.cpp ../spc7110.cpp ../obc1.cpp \
	../seta.cpp ../seta010.cpp ../seta011.cpp ../seta018.cpp \
	../controls.cpp ../crosshairs.cpp ../cpu.cpp ../sa1.cpp \
	../debug.cpp ../sdd1.cpp ../tile.cpp ../srtc.cpp ../gfx.cpp \
	../memmap.cpp ../clip.cpp ../ppu.cpp ../dma.cpp ../snes9x.cpp \
	../globals.cpp ../stream.cpp ../conffile.cpp ../bsx.cpp \
	../logger.cpp ../snapshot.cpp ../screenshot.cpp ../movie.cpp \
	../cpuops.cpp ../cpuexec.cpp ../sa1cpu.cpp ../cheats.cpp \
	../cheats2.cpp $(am__append_11) $(am__append_12) \
	../loadzip.cpp ../unzip/unzip.c ../unzip/ioapi.c \
	../unzip/zip.c $(am__append_15) $(am__append_16) \
	$(am__append_17)
UNZIPDEFINES = -DUNZIP_SUPPORT
libjma_a_SOURCES = \
    ../jma/s9x-jma.cpp \
    ../jma/7zlzma.cpp \
    ../jma/crc32.cpp \
    ../jma/iiostrm.cpp \
    ../jma/inbyte.cpp \
    ../jma/jma.cpp \
    ../jma/lzma.cpp \
    ../jma/lzmadec.cpp \
    ../jma/winout.cpp

libjma_a_CPPFLAGS = -fexceptions
SUFFIXES = .asm .ASM
all: all-recursive

.SUFFIXES:
.SUFFIXES: .asm .ASM .c .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
../jma/$(am__dirstamp):
	@$(MKDIR_P) ../jma
	@: > ../jma/$(am__dirstamp)
../jma/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../jma/$(DEPDIR)
	@: > ../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-s9x-jma.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-7zlzma.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-crc32.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-iiostrm.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-inbyte.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-jma.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-lzma.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-lzmadec.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)
../jma/libjma_a-winout.$(OBJEXT): ../jma/$(am__dirstamp) \
	../jma/$(DEPDIR)/$(am__dirstamp)

libjma.a: $(libjma_a_OBJECTS) $(libjma_a_DEPENDENCIES) $(EXTRA_libjma_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libjma.a
	$(AM_V_AR)$(libjma_a_AR) libjma.a $(libjma_a_OBJECTS) $(libjma_a_LIBADD)
	$(AM_V_at)$(RANLIB) libjma.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
../filter/$(am__dirstamp):
	@$(MKDIR_P) ../filter
	@: > ../filter/$(am__dirstamp)
../filter/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../filter/$(DEPDIR)
	@: > ../filter/$(DEPDIR)/$(am__dirstamp)
../filter/snes9x_gtk-2xsai.$(OBJEXT): ../filter/$(am__dirstamp) \
	../filter/$(DEPDIR)/$(am__dirstamp)
../filter/snes9x_gtk-epx.$(OBJEXT): ../filter/$(am__dirstamp) \
	../filter/$(DEPDIR)/$(am__dirstamp)
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-filter_epx_unsafe.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_binding.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_cheat.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_config.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_control.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_display.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_display_driver_gtk.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_file.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_snes9x_ui.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_builder_window.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_preferences.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_s9x.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_s9xwindow.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_sound.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes_ntsc.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
../filter/snes9x_gtk-hq2x.$(OBJEXT): ../filter/$(am__dirstamp) \
	../filter/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_sound_driver_portaudio.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_sound_driver_pulse.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_sound_driver_oss.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_sound_driver_sdl.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_sound_driver_alsa.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
../i386/$(am__dirstamp):
	@$(MKDIR_P) ../i386
	@: > ../i386/$(am__dirstamp)
../i386/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../i386/$(DEPDIR)
	@: > ../i386/$(DEPDIR)/$(am__dirstamp)
../i386/fxemu2b.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../i386/fxemu2.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../i386/fxemu2c.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../i386/fxtable.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../i386/sfxproc.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../i386/zsnes.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../$(am__dirstamp):
	@$(MKDIR_P) ..
	@: > ../$(am__dirstamp)
../$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../$(DEPDIR)
	@: > ../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-fxinst.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-fxemu.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-fxdbg.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../i386/c4.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../i386/zsnesc4.$(OBJEXT): ../i386/$(am__dirstamp) \
	../i386/$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-c4.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-c4emu.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../apu/$(am__dirstamp):
	@$(MKDIR_P) ../apu
	@: > ../apu/$(am__dirstamp)
../apu/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../apu/$(DEPDIR)
	@: > ../apu/$(DEPDIR)/$(am__dirstamp)
../apu/snes9x_gtk-apu.$(OBJEXT): ../apu/$(am__dirstamp) \
	../apu/$(DEPDIR)/$(am__dirstamp)
../apu/bapu/dsp/$(am__dirstamp):
	@$(MKDIR_P) ../apu/bapu/dsp
	@: > ../apu/bapu/dsp/$(am__dirstamp)
../apu/bapu/dsp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../apu/bapu/dsp/$(DEPDIR)
	@: > ../apu/bapu/dsp/$(DEPDIR)/$(am__dirstamp)
../apu/bapu/dsp/snes9x_gtk-sdsp.$(OBJEXT):  \
	../apu/bapu/dsp/$(am__dirstamp) \
	../apu/bapu/dsp/$(DEPDIR)/$(am__dirstamp)
../apu/bapu/dsp/snes9x_gtk-SPC_DSP.$(OBJEXT):  \
	../apu/bapu/dsp/$(am__dirstamp) \
	../apu/bapu/dsp/$(DEPDIR)/$(am__dirstamp)
../apu/bapu/smp/$(am__dirstamp):
	@$(MKDIR_P) ../apu/bapu/smp
	@: > ../apu/bapu/smp/$(am__dirstamp)
../apu/bapu/smp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../apu/bapu/smp/$(DEPDIR)
	@: > ../apu/bapu/smp/$(DEPDIR)/$(am__dirstamp)
../apu/bapu/smp/snes9x_gtk-smp.$(OBJEXT):  \
	../apu/bapu/smp/$(am__dirstamp) \
	../apu/bapu/smp/$(DEPDIR)/$(am__dirstamp)
../apu/bapu/smp/snes9x_gtk-smp_state.$(OBJEXT):  \
	../apu/bapu/smp/$(am__dirstamp) \
	../apu/bapu/smp/$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-dsp.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-dsp1.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-dsp2.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-dsp3.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-dsp4.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-spc7110.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-obc1.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-seta.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-seta010.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-seta011.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-seta018.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-controls.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-crosshairs.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-cpu.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-sa1.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-debug.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-sdd1.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-tile.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-srtc.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-gfx.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-memmap.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-clip.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-ppu.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-dma.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-snes9x.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-globals.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-stream.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-conffile.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-bsx.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-logger.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-snapshot.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-screenshot.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-movie.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-cpuops.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-cpuexec.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-sa1cpu.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-cheats.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-cheats2.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-sdd1emu.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-netplay.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-server.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../snes9x_gtk-loadzip.$(OBJEXT): ../$(am__dirstamp) \
	../$(DEPDIR)/$(am__dirstamp)
../unzip/$(am__dirstamp):
	@$(MKDIR_P) ../unzip
	@: > ../unzip/$(am__dirstamp)
../unzip/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) ../unzip/$(DEPDIR)
	@: > ../unzip/$(DEPDIR)/$(am__dirstamp)
../unzip/unzip.$(OBJEXT): ../unzip/$(am__dirstamp) \
	../unzip/$(DEPDIR)/$(am__dirstamp)
../unzip/ioapi.$(OBJEXT): ../unzip/$(am__dirstamp) \
	../unzip/$(DEPDIR)/$(am__dirstamp)
../unzip/zip.$(OBJEXT): ../unzip/$(am__dirstamp) \
	../unzip/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_display_driver_opengl.$(OBJEXT):  \
	src/$(am__dirstamp) src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_display_driver_xv.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_netplay_dialog.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/snes9x_gtk-gtk_netplay.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

snes9x-gtk$(EXEEXT): $(snes9x_gtk_OBJECTS) $(snes9x_gtk_DEPENDENCIES) $(EXTRA_snes9x_gtk_DEPENDENCIES) 
	@rm -f snes9x-gtk$(EXEEXT)
	$(AM_V_CXXLD)$(snes9x_gtk_LINK) $(snes9x_gtk_OBJECTS) $(snes9x_gtk_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f ../*.$(OBJEXT)
	-rm -f ../apu/*.$(OBJEXT)
	-rm -f ../apu/bapu/dsp/*.$(OBJEXT)
	-rm -f ../apu/bapu/smp/*.$(OBJEXT)
	-rm -f ../filter/*.$(OBJEXT)
	-rm -f ../i386/*.$(OBJEXT)
	-rm -f ../jma/*.$(OBJEXT)
	-rm -f ../unzip/*.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ../$(DEPDIR)/snes9x_gtk-bsx.Po
include ../$(DEPDIR)/snes9x_gtk-c4.Po
include ../$(DEPDIR)/snes9x_gtk-c4emu.Po
include ../$(DEPDIR)/snes9x_gtk-cheats.Po
include ../$(DEPDIR)/snes9x_gtk-cheats2.Po
include ../$(DEPDIR)/snes9x_gtk-clip.Po
include ../$(DEPDIR)/snes9x_gtk-conffile.Po
include ../$(DEPDIR)/snes9x_gtk-controls.Po
include ../$(DEPDIR)/snes9x_gtk-cpu.Po
include ../$(DEPDIR)/snes9x_gtk-cpuexec.Po
include ../$(DEPDIR)/snes9x_gtk-cpuops.Po
include ../$(DEPDIR)/snes9x_gtk-crosshairs.Po
include ../$(DEPDIR)/snes9x_gtk-debug.Po
include ../$(DEPDIR)/snes9x_gtk-dma.Po
include ../$(DEPDIR)/snes9x_gtk-dsp.Po
include ../$(DEPDIR)/snes9x_gtk-dsp1.Po
include ../$(DEPDIR)/snes9x_gtk-dsp2.Po
include ../$(DEPDIR)/snes9x_gtk-dsp3.Po
include ../$(DEPDIR)/snes9x_gtk-dsp4.Po
include ../$(DEPDIR)/snes9x_gtk-fxdbg.Po
include ../$(DEPDIR)/snes9x_gtk-fxemu.Po
include ../$(DEPDIR)/snes9x_gtk-fxinst.Po
include ../$(DEPDIR)/snes9x_gtk-gfx.Po
include ../$(DEPDIR)/snes9x_gtk-globals.Po
include ../$(DEPDIR)/snes9x_gtk-loadzip.Po
include ../$(DEPDIR)/snes9x_gtk-logger.Po
include ../$(DEPDIR)/snes9x_gtk-memmap.Po
include ../$(DEPDIR)/snes9x_gtk-movie.Po
include ../$(DEPDIR)/snes9x_gtk-netplay.Po
include ../$(DEPDIR)/snes9x_gtk-obc1.Po
include ../$(DEPDIR)/snes9x_gtk-ppu.Po
include ../$(DEPDIR)/snes9x_gtk-sa1.Po
include ../$(DEPDIR)/snes9x_gtk-sa1cpu.Po
include ../$(DEPDIR)/snes9x_gtk-screenshot.Po
include ../$(DEPDIR)/snes9x_gtk-sdd1.Po
include ../$(DEPDIR)/snes9x_gtk-sdd1emu.Po
include ../$(DEPDIR)/snes9x_gtk-server.Po
include ../$(DEPDIR)/snes9x_gtk-seta.Po
include ../$(DEPDIR)/snes9x_gtk-seta010.Po
include ../$(DEPDIR)/snes9x_gtk-seta011.Po
include ../$(DEPDIR)/snes9x_gtk-seta018.Po
include ../$(DEPDIR)/snes9x_gtk-snapshot.Po
include ../$(DEPDIR)/snes9x_gtk-snes9x.Po
include ../$(DEPDIR)/snes9x_gtk-spc7110.Po
include ../$(DEPDIR)/snes9x_gtk-srtc.Po
include ../$(DEPDIR)/snes9x_gtk-stream.Po
include ../$(DEPDIR)/snes9x_gtk-tile.Po
include ../apu/$(DEPDIR)/snes9x_gtk-apu.Po
include ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Po
include ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Po
include ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Po
include ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Po
include ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Po
include ../filter/$(DEPDIR)/snes9x_gtk-epx.Po
include ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Po
include ../jma/$(DEPDIR)/libjma_a-7zlzma.Po
include ../jma/$(DEPDIR)/libjma_a-crc32.Po
include ../jma/$(DEPDIR)/libjma_a-iiostrm.Po
include ../jma/$(DEPDIR)/libjma_a-inbyte.Po
include ../jma/$(DEPDIR)/libjma_a-jma.Po
include ../jma/$(DEPDIR)/libjma_a-lzma.Po
include ../jma/$(DEPDIR)/libjma_a-lzmadec.Po
include ../jma/$(DEPDIR)/libjma_a-s9x-jma.Po
include ../jma/$(DEPDIR)/libjma_a-winout.Po
include ../unzip/$(DEPDIR)/ioapi.Po
include ../unzip/$(DEPDIR)/unzip.Po
include ../unzip/$(DEPDIR)/zip.Po
include src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_binding.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_config.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_control.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_display.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_file.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_sound.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Po
include src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Po
include src/$(DEPDIR)/snes_ntsc.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

../jma/libjma_a-s9x-jma.o: ../jma/s9x-jma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-s9x-jma.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-s9x-jma.Tpo -c -o ../jma/libjma_a-s9x-jma.o `test -f '../jma/s9x-jma.cpp' || echo '$(srcdir)/'`../jma/s9x-jma.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-s9x-jma.Tpo ../jma/$(DEPDIR)/libjma_a-s9x-jma.Po
#	$(AM_V_CXX)source='../jma/s9x-jma.cpp' object='../jma/libjma_a-s9x-jma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-s9x-jma.o `test -f '../jma/s9x-jma.cpp' || echo '$(srcdir)/'`../jma/s9x-jma.cpp

../jma/libjma_a-s9x-jma.obj: ../jma/s9x-jma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-s9x-jma.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-s9x-jma.Tpo -c -o ../jma/libjma_a-s9x-jma.obj `if test -f '../jma/s9x-jma.cpp'; then $(CYGPATH_W) '../jma/s9x-jma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/s9x-jma.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-s9x-jma.Tpo ../jma/$(DEPDIR)/libjma_a-s9x-jma.Po
#	$(AM_V_CXX)source='../jma/s9x-jma.cpp' object='../jma/libjma_a-s9x-jma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-s9x-jma.obj `if test -f '../jma/s9x-jma.cpp'; then $(CYGPATH_W) '../jma/s9x-jma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/s9x-jma.cpp'; fi`

../jma/libjma_a-7zlzma.o: ../jma/7zlzma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-7zlzma.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-7zlzma.Tpo -c -o ../jma/libjma_a-7zlzma.o `test -f '../jma/7zlzma.cpp' || echo '$(srcdir)/'`../jma/7zlzma.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-7zlzma.Tpo ../jma/$(DEPDIR)/libjma_a-7zlzma.Po
#	$(AM_V_CXX)source='../jma/7zlzma.cpp' object='../jma/libjma_a-7zlzma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-7zlzma.o `test -f '../jma/7zlzma.cpp' || echo '$(srcdir)/'`../jma/7zlzma.cpp

../jma/libjma_a-7zlzma.obj: ../jma/7zlzma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-7zlzma.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-7zlzma.Tpo -c -o ../jma/libjma_a-7zlzma.obj `if test -f '../jma/7zlzma.cpp'; then $(CYGPATH_W) '../jma/7zlzma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/7zlzma.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-7zlzma.Tpo ../jma/$(DEPDIR)/libjma_a-7zlzma.Po
#	$(AM_V_CXX)source='../jma/7zlzma.cpp' object='../jma/libjma_a-7zlzma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-7zlzma.obj `if test -f '../jma/7zlzma.cpp'; then $(CYGPATH_W) '../jma/7zlzma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/7zlzma.cpp'; fi`

../jma/libjma_a-crc32.o: ../jma/crc32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-crc32.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-crc32.Tpo -c -o ../jma/libjma_a-crc32.o `test -f '../jma/crc32.cpp' || echo '$(srcdir)/'`../jma/crc32.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-crc32.Tpo ../jma/$(DEPDIR)/libjma_a-crc32.Po
#	$(AM_V_CXX)source='../jma/crc32.cpp' object='../jma/libjma_a-crc32.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-crc32.o `test -f '../jma/crc32.cpp' || echo '$(srcdir)/'`../jma/crc32.cpp

../jma/libjma_a-crc32.obj: ../jma/crc32.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-crc32.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-crc32.Tpo -c -o ../jma/libjma_a-crc32.obj `if test -f '../jma/crc32.cpp'; then $(CYGPATH_W) '../jma/crc32.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/crc32.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-crc32.Tpo ../jma/$(DEPDIR)/libjma_a-crc32.Po
#	$(AM_V_CXX)source='../jma/crc32.cpp' object='../jma/libjma_a-crc32.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-crc32.obj `if test -f '../jma/crc32.cpp'; then $(CYGPATH_W) '../jma/crc32.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/crc32.cpp'; fi`

../jma/libjma_a-iiostrm.o: ../jma/iiostrm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-iiostrm.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-iiostrm.Tpo -c -o ../jma/libjma_a-iiostrm.o `test -f '../jma/iiostrm.cpp' || echo '$(srcdir)/'`../jma/iiostrm.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-iiostrm.Tpo ../jma/$(DEPDIR)/libjma_a-iiostrm.Po
#	$(AM_V_CXX)source='../jma/iiostrm.cpp' object='../jma/libjma_a-iiostrm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-iiostrm.o `test -f '../jma/iiostrm.cpp' || echo '$(srcdir)/'`../jma/iiostrm.cpp

../jma/libjma_a-iiostrm.obj: ../jma/iiostrm.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-iiostrm.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-iiostrm.Tpo -c -o ../jma/libjma_a-iiostrm.obj `if test -f '../jma/iiostrm.cpp'; then $(CYGPATH_W) '../jma/iiostrm.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/iiostrm.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-iiostrm.Tpo ../jma/$(DEPDIR)/libjma_a-iiostrm.Po
#	$(AM_V_CXX)source='../jma/iiostrm.cpp' object='../jma/libjma_a-iiostrm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-iiostrm.obj `if test -f '../jma/iiostrm.cpp'; then $(CYGPATH_W) '../jma/iiostrm.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/iiostrm.cpp'; fi`

../jma/libjma_a-inbyte.o: ../jma/inbyte.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-inbyte.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-inbyte.Tpo -c -o ../jma/libjma_a-inbyte.o `test -f '../jma/inbyte.cpp' || echo '$(srcdir)/'`../jma/inbyte.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-inbyte.Tpo ../jma/$(DEPDIR)/libjma_a-inbyte.Po
#	$(AM_V_CXX)source='../jma/inbyte.cpp' object='../jma/libjma_a-inbyte.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-inbyte.o `test -f '../jma/inbyte.cpp' || echo '$(srcdir)/'`../jma/inbyte.cpp

../jma/libjma_a-inbyte.obj: ../jma/inbyte.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-inbyte.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-inbyte.Tpo -c -o ../jma/libjma_a-inbyte.obj `if test -f '../jma/inbyte.cpp'; then $(CYGPATH_W) '../jma/inbyte.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/inbyte.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-inbyte.Tpo ../jma/$(DEPDIR)/libjma_a-inbyte.Po
#	$(AM_V_CXX)source='../jma/inbyte.cpp' object='../jma/libjma_a-inbyte.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-inbyte.obj `if test -f '../jma/inbyte.cpp'; then $(CYGPATH_W) '../jma/inbyte.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/inbyte.cpp'; fi`

../jma/libjma_a-jma.o: ../jma/jma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-jma.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-jma.Tpo -c -o ../jma/libjma_a-jma.o `test -f '../jma/jma.cpp' || echo '$(srcdir)/'`../jma/jma.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-jma.Tpo ../jma/$(DEPDIR)/libjma_a-jma.Po
#	$(AM_V_CXX)source='../jma/jma.cpp' object='../jma/libjma_a-jma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-jma.o `test -f '../jma/jma.cpp' || echo '$(srcdir)/'`../jma/jma.cpp

../jma/libjma_a-jma.obj: ../jma/jma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-jma.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-jma.Tpo -c -o ../jma/libjma_a-jma.obj `if test -f '../jma/jma.cpp'; then $(CYGPATH_W) '../jma/jma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/jma.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-jma.Tpo ../jma/$(DEPDIR)/libjma_a-jma.Po
#	$(AM_V_CXX)source='../jma/jma.cpp' object='../jma/libjma_a-jma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-jma.obj `if test -f '../jma/jma.cpp'; then $(CYGPATH_W) '../jma/jma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/jma.cpp'; fi`

../jma/libjma_a-lzma.o: ../jma/lzma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-lzma.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-lzma.Tpo -c -o ../jma/libjma_a-lzma.o `test -f '../jma/lzma.cpp' || echo '$(srcdir)/'`../jma/lzma.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-lzma.Tpo ../jma/$(DEPDIR)/libjma_a-lzma.Po
#	$(AM_V_CXX)source='../jma/lzma.cpp' object='../jma/libjma_a-lzma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-lzma.o `test -f '../jma/lzma.cpp' || echo '$(srcdir)/'`../jma/lzma.cpp

../jma/libjma_a-lzma.obj: ../jma/lzma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-lzma.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-lzma.Tpo -c -o ../jma/libjma_a-lzma.obj `if test -f '../jma/lzma.cpp'; then $(CYGPATH_W) '../jma/lzma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/lzma.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-lzma.Tpo ../jma/$(DEPDIR)/libjma_a-lzma.Po
#	$(AM_V_CXX)source='../jma/lzma.cpp' object='../jma/libjma_a-lzma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-lzma.obj `if test -f '../jma/lzma.cpp'; then $(CYGPATH_W) '../jma/lzma.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/lzma.cpp'; fi`

../jma/libjma_a-lzmadec.o: ../jma/lzmadec.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-lzmadec.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-lzmadec.Tpo -c -o ../jma/libjma_a-lzmadec.o `test -f '../jma/lzmadec.cpp' || echo '$(srcdir)/'`../jma/lzmadec.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-lzmadec.Tpo ../jma/$(DEPDIR)/libjma_a-lzmadec.Po
#	$(AM_V_CXX)source='../jma/lzmadec.cpp' object='../jma/libjma_a-lzmadec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-lzmadec.o `test -f '../jma/lzmadec.cpp' || echo '$(srcdir)/'`../jma/lzmadec.cpp

../jma/libjma_a-lzmadec.obj: ../jma/lzmadec.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-lzmadec.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-lzmadec.Tpo -c -o ../jma/libjma_a-lzmadec.obj `if test -f '../jma/lzmadec.cpp'; then $(CYGPATH_W) '../jma/lzmadec.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/lzmadec.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-lzmadec.Tpo ../jma/$(DEPDIR)/libjma_a-lzmadec.Po
#	$(AM_V_CXX)source='../jma/lzmadec.cpp' object='../jma/libjma_a-lzmadec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-lzmadec.obj `if test -f '../jma/lzmadec.cpp'; then $(CYGPATH_W) '../jma/lzmadec.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/lzmadec.cpp'; fi`

../jma/libjma_a-winout.o: ../jma/winout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-winout.o -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-winout.Tpo -c -o ../jma/libjma_a-winout.o `test -f '../jma/winout.cpp' || echo '$(srcdir)/'`../jma/winout.cpp
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-winout.Tpo ../jma/$(DEPDIR)/libjma_a-winout.Po
#	$(AM_V_CXX)source='../jma/winout.cpp' object='../jma/libjma_a-winout.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-winout.o `test -f '../jma/winout.cpp' || echo '$(srcdir)/'`../jma/winout.cpp

../jma/libjma_a-winout.obj: ../jma/winout.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ../jma/libjma_a-winout.obj -MD -MP -MF ../jma/$(DEPDIR)/libjma_a-winout.Tpo -c -o ../jma/libjma_a-winout.obj `if test -f '../jma/winout.cpp'; then $(CYGPATH_W) '../jma/winout.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/winout.cpp'; fi`
	$(AM_V_at)$(am__mv) ../jma/$(DEPDIR)/libjma_a-winout.Tpo ../jma/$(DEPDIR)/libjma_a-winout.Po
#	$(AM_V_CXX)source='../jma/winout.cpp' object='../jma/libjma_a-winout.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libjma_a_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ../jma/libjma_a-winout.obj `if test -f '../jma/winout.cpp'; then $(CYGPATH_W) '../jma/winout.cpp'; else $(CYGPATH_W) '$(srcdir)/../jma/winout.cpp'; fi`

../filter/snes9x_gtk-2xsai.o: ../filter/2xsai.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../filter/snes9x_gtk-2xsai.o -MD -MP -MF ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Tpo -c -o ../filter/snes9x_gtk-2xsai.o `test -f '../filter/2xsai.cpp' || echo '$(srcdir)/'`../filter/2xsai.cpp
	$(AM_V_at)$(am__mv) ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Tpo ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Po
#	$(AM_V_CXX)source='../filter/2xsai.cpp' object='../filter/snes9x_gtk-2xsai.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../filter/snes9x_gtk-2xsai.o `test -f '../filter/2xsai.cpp' || echo '$(srcdir)/'`../filter/2xsai.cpp

../filter/snes9x_gtk-2xsai.obj: ../filter/2xsai.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../filter/snes9x_gtk-2xsai.obj -MD -MP -MF ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Tpo -c -o ../filter/snes9x_gtk-2xsai.obj `if test -f '../filter/2xsai.cpp'; then $(CYGPATH_W) '../filter/2xsai.cpp'; else $(CYGPATH_W) '$(srcdir)/../filter/2xsai.cpp'; fi`
	$(AM_V_at)$(am__mv) ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Tpo ../filter/$(DEPDIR)/snes9x_gtk-2xsai.Po
#	$(AM_V_CXX)source='../filter/2xsai.cpp' object='../filter/snes9x_gtk-2xsai.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../filter/snes9x_gtk-2xsai.obj `if test -f '../filter/2xsai.cpp'; then $(CYGPATH_W) '../filter/2xsai.cpp'; else $(CYGPATH_W) '$(srcdir)/../filter/2xsai.cpp'; fi`

../filter/snes9x_gtk-epx.o: ../filter/epx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../filter/snes9x_gtk-epx.o -MD -MP -MF ../filter/$(DEPDIR)/snes9x_gtk-epx.Tpo -c -o ../filter/snes9x_gtk-epx.o `test -f '../filter/epx.cpp' || echo '$(srcdir)/'`../filter/epx.cpp
	$(AM_V_at)$(am__mv) ../filter/$(DEPDIR)/snes9x_gtk-epx.Tpo ../filter/$(DEPDIR)/snes9x_gtk-epx.Po
#	$(AM_V_CXX)source='../filter/epx.cpp' object='../filter/snes9x_gtk-epx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../filter/snes9x_gtk-epx.o `test -f '../filter/epx.cpp' || echo '$(srcdir)/'`../filter/epx.cpp

../filter/snes9x_gtk-epx.obj: ../filter/epx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../filter/snes9x_gtk-epx.obj -MD -MP -MF ../filter/$(DEPDIR)/snes9x_gtk-epx.Tpo -c -o ../filter/snes9x_gtk-epx.obj `if test -f '../filter/epx.cpp'; then $(CYGPATH_W) '../filter/epx.cpp'; else $(CYGPATH_W) '$(srcdir)/../filter/epx.cpp'; fi`
	$(AM_V_at)$(am__mv) ../filter/$(DEPDIR)/snes9x_gtk-epx.Tpo ../filter/$(DEPDIR)/snes9x_gtk-epx.Po
#	$(AM_V_CXX)source='../filter/epx.cpp' object='../filter/snes9x_gtk-epx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../filter/snes9x_gtk-epx.obj `if test -f '../filter/epx.cpp'; then $(CYGPATH_W) '../filter/epx.cpp'; else $(CYGPATH_W) '$(srcdir)/../filter/epx.cpp'; fi`

src/snes9x_gtk-filter_epx_unsafe.o: src/filter_epx_unsafe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-filter_epx_unsafe.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Tpo -c -o src/snes9x_gtk-filter_epx_unsafe.o `test -f 'src/filter_epx_unsafe.cpp' || echo '$(srcdir)/'`src/filter_epx_unsafe.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Tpo src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Po
#	$(AM_V_CXX)source='src/filter_epx_unsafe.cpp' object='src/snes9x_gtk-filter_epx_unsafe.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-filter_epx_unsafe.o `test -f 'src/filter_epx_unsafe.cpp' || echo '$(srcdir)/'`src/filter_epx_unsafe.cpp

src/snes9x_gtk-filter_epx_unsafe.obj: src/filter_epx_unsafe.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-filter_epx_unsafe.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Tpo -c -o src/snes9x_gtk-filter_epx_unsafe.obj `if test -f 'src/filter_epx_unsafe.cpp'; then $(CYGPATH_W) 'src/filter_epx_unsafe.cpp'; else $(CYGPATH_W) '$(srcdir)/src/filter_epx_unsafe.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Tpo src/$(DEPDIR)/snes9x_gtk-filter_epx_unsafe.Po
#	$(AM_V_CXX)source='src/filter_epx_unsafe.cpp' object='src/snes9x_gtk-filter_epx_unsafe.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-filter_epx_unsafe.obj `if test -f 'src/filter_epx_unsafe.cpp'; then $(CYGPATH_W) 'src/filter_epx_unsafe.cpp'; else $(CYGPATH_W) '$(srcdir)/src/filter_epx_unsafe.cpp'; fi`

src/snes9x_gtk-gtk_binding.o: src/gtk_binding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_binding.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_binding.Tpo -c -o src/snes9x_gtk-gtk_binding.o `test -f 'src/gtk_binding.cpp' || echo '$(srcdir)/'`src/gtk_binding.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_binding.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_binding.Po
#	$(AM_V_CXX)source='src/gtk_binding.cpp' object='src/snes9x_gtk-gtk_binding.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_binding.o `test -f 'src/gtk_binding.cpp' || echo '$(srcdir)/'`src/gtk_binding.cpp

src/snes9x_gtk-gtk_binding.obj: src/gtk_binding.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_binding.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_binding.Tpo -c -o src/snes9x_gtk-gtk_binding.obj `if test -f 'src/gtk_binding.cpp'; then $(CYGPATH_W) 'src/gtk_binding.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_binding.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_binding.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_binding.Po
#	$(AM_V_CXX)source='src/gtk_binding.cpp' object='src/snes9x_gtk-gtk_binding.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_binding.obj `if test -f 'src/gtk_binding.cpp'; then $(CYGPATH_W) 'src/gtk_binding.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_binding.cpp'; fi`

src/snes9x_gtk-gtk_cheat.o: src/gtk_cheat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_cheat.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Tpo -c -o src/snes9x_gtk-gtk_cheat.o `test -f 'src/gtk_cheat.cpp' || echo '$(srcdir)/'`src/gtk_cheat.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Po
#	$(AM_V_CXX)source='src/gtk_cheat.cpp' object='src/snes9x_gtk-gtk_cheat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_cheat.o `test -f 'src/gtk_cheat.cpp' || echo '$(srcdir)/'`src/gtk_cheat.cpp

src/snes9x_gtk-gtk_cheat.obj: src/gtk_cheat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_cheat.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Tpo -c -o src/snes9x_gtk-gtk_cheat.obj `if test -f 'src/gtk_cheat.cpp'; then $(CYGPATH_W) 'src/gtk_cheat.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_cheat.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_cheat.Po
#	$(AM_V_CXX)source='src/gtk_cheat.cpp' object='src/snes9x_gtk-gtk_cheat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_cheat.obj `if test -f 'src/gtk_cheat.cpp'; then $(CYGPATH_W) 'src/gtk_cheat.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_cheat.cpp'; fi`

src/snes9x_gtk-gtk_config.o: src/gtk_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_config.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_config.Tpo -c -o src/snes9x_gtk-gtk_config.o `test -f 'src/gtk_config.cpp' || echo '$(srcdir)/'`src/gtk_config.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_config.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_config.Po
#	$(AM_V_CXX)source='src/gtk_config.cpp' object='src/snes9x_gtk-gtk_config.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_config.o `test -f 'src/gtk_config.cpp' || echo '$(srcdir)/'`src/gtk_config.cpp

src/snes9x_gtk-gtk_config.obj: src/gtk_config.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_config.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_config.Tpo -c -o src/snes9x_gtk-gtk_config.obj `if test -f 'src/gtk_config.cpp'; then $(CYGPATH_W) 'src/gtk_config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_config.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_config.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_config.Po
#	$(AM_V_CXX)source='src/gtk_config.cpp' object='src/snes9x_gtk-gtk_config.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_config.obj `if test -f 'src/gtk_config.cpp'; then $(CYGPATH_W) 'src/gtk_config.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_config.cpp'; fi`

src/snes9x_gtk-gtk_control.o: src/gtk_control.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_control.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_control.Tpo -c -o src/snes9x_gtk-gtk_control.o `test -f 'src/gtk_control.cpp' || echo '$(srcdir)/'`src/gtk_control.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_control.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_control.Po
#	$(AM_V_CXX)source='src/gtk_control.cpp' object='src/snes9x_gtk-gtk_control.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_control.o `test -f 'src/gtk_control.cpp' || echo '$(srcdir)/'`src/gtk_control.cpp

src/snes9x_gtk-gtk_control.obj: src/gtk_control.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_control.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_control.Tpo -c -o src/snes9x_gtk-gtk_control.obj `if test -f 'src/gtk_control.cpp'; then $(CYGPATH_W) 'src/gtk_control.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_control.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_control.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_control.Po
#	$(AM_V_CXX)source='src/gtk_control.cpp' object='src/snes9x_gtk-gtk_control.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_control.obj `if test -f 'src/gtk_control.cpp'; then $(CYGPATH_W) 'src/gtk_control.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_control.cpp'; fi`

src/snes9x_gtk-gtk_display.o: src/gtk_display.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display.Tpo -c -o src/snes9x_gtk-gtk_display.o `test -f 'src/gtk_display.cpp' || echo '$(srcdir)/'`src/gtk_display.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display.Po
#	$(AM_V_CXX)source='src/gtk_display.cpp' object='src/snes9x_gtk-gtk_display.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display.o `test -f 'src/gtk_display.cpp' || echo '$(srcdir)/'`src/gtk_display.cpp

src/snes9x_gtk-gtk_display.obj: src/gtk_display.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display.Tpo -c -o src/snes9x_gtk-gtk_display.obj `if test -f 'src/gtk_display.cpp'; then $(CYGPATH_W) 'src/gtk_display.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display.Po
#	$(AM_V_CXX)source='src/gtk_display.cpp' object='src/snes9x_gtk-gtk_display.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display.obj `if test -f 'src/gtk_display.cpp'; then $(CYGPATH_W) 'src/gtk_display.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display.cpp'; fi`

src/snes9x_gtk-gtk_display_driver_gtk.o: src/gtk_display_driver_gtk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display_driver_gtk.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Tpo -c -o src/snes9x_gtk-gtk_display_driver_gtk.o `test -f 'src/gtk_display_driver_gtk.cpp' || echo '$(srcdir)/'`src/gtk_display_driver_gtk.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Po
#	$(AM_V_CXX)source='src/gtk_display_driver_gtk.cpp' object='src/snes9x_gtk-gtk_display_driver_gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display_driver_gtk.o `test -f 'src/gtk_display_driver_gtk.cpp' || echo '$(srcdir)/'`src/gtk_display_driver_gtk.cpp

src/snes9x_gtk-gtk_display_driver_gtk.obj: src/gtk_display_driver_gtk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display_driver_gtk.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Tpo -c -o src/snes9x_gtk-gtk_display_driver_gtk.obj `if test -f 'src/gtk_display_driver_gtk.cpp'; then $(CYGPATH_W) 'src/gtk_display_driver_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display_driver_gtk.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_gtk.Po
#	$(AM_V_CXX)source='src/gtk_display_driver_gtk.cpp' object='src/snes9x_gtk-gtk_display_driver_gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display_driver_gtk.obj `if test -f 'src/gtk_display_driver_gtk.cpp'; then $(CYGPATH_W) 'src/gtk_display_driver_gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display_driver_gtk.cpp'; fi`

src/snes9x_gtk-gtk_file.o: src/gtk_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_file.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_file.Tpo -c -o src/snes9x_gtk-gtk_file.o `test -f 'src/gtk_file.cpp' || echo '$(srcdir)/'`src/gtk_file.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_file.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_file.Po
#	$(AM_V_CXX)source='src/gtk_file.cpp' object='src/snes9x_gtk-gtk_file.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_file.o `test -f 'src/gtk_file.cpp' || echo '$(srcdir)/'`src/gtk_file.cpp

src/snes9x_gtk-gtk_file.obj: src/gtk_file.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_file.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_file.Tpo -c -o src/snes9x_gtk-gtk_file.obj `if test -f 'src/gtk_file.cpp'; then $(CYGPATH_W) 'src/gtk_file.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_file.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_file.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_file.Po
#	$(AM_V_CXX)source='src/gtk_file.cpp' object='src/snes9x_gtk-gtk_file.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_file.obj `if test -f 'src/gtk_file.cpp'; then $(CYGPATH_W) 'src/gtk_file.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_file.cpp'; fi`

src/snes9x_gtk-gtk_snes9x_ui.o: src/gtk_snes9x_ui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_snes9x_ui.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Tpo -c -o src/snes9x_gtk-gtk_snes9x_ui.o `test -f 'src/gtk_snes9x_ui.cpp' || echo '$(srcdir)/'`src/gtk_snes9x_ui.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Po
#	$(AM_V_CXX)source='src/gtk_snes9x_ui.cpp' object='src/snes9x_gtk-gtk_snes9x_ui.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_snes9x_ui.o `test -f 'src/gtk_snes9x_ui.cpp' || echo '$(srcdir)/'`src/gtk_snes9x_ui.cpp

src/snes9x_gtk-gtk_snes9x_ui.obj: src/gtk_snes9x_ui.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_snes9x_ui.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Tpo -c -o src/snes9x_gtk-gtk_snes9x_ui.obj `if test -f 'src/gtk_snes9x_ui.cpp'; then $(CYGPATH_W) 'src/gtk_snes9x_ui.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_snes9x_ui.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_snes9x_ui.Po
#	$(AM_V_CXX)source='src/gtk_snes9x_ui.cpp' object='src/snes9x_gtk-gtk_snes9x_ui.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_snes9x_ui.obj `if test -f 'src/gtk_snes9x_ui.cpp'; then $(CYGPATH_W) 'src/gtk_snes9x_ui.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_snes9x_ui.cpp'; fi`

src/snes9x_gtk-gtk_builder_window.o: src/gtk_builder_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_builder_window.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Tpo -c -o src/snes9x_gtk-gtk_builder_window.o `test -f 'src/gtk_builder_window.cpp' || echo '$(srcdir)/'`src/gtk_builder_window.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Po
#	$(AM_V_CXX)source='src/gtk_builder_window.cpp' object='src/snes9x_gtk-gtk_builder_window.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_builder_window.o `test -f 'src/gtk_builder_window.cpp' || echo '$(srcdir)/'`src/gtk_builder_window.cpp

src/snes9x_gtk-gtk_builder_window.obj: src/gtk_builder_window.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_builder_window.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Tpo -c -o src/snes9x_gtk-gtk_builder_window.obj `if test -f 'src/gtk_builder_window.cpp'; then $(CYGPATH_W) 'src/gtk_builder_window.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_builder_window.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_builder_window.Po
#	$(AM_V_CXX)source='src/gtk_builder_window.cpp' object='src/snes9x_gtk-gtk_builder_window.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_builder_window.obj `if test -f 'src/gtk_builder_window.cpp'; then $(CYGPATH_W) 'src/gtk_builder_window.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_builder_window.cpp'; fi`

src/snes9x_gtk-gtk_preferences.o: src/gtk_preferences.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_preferences.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Tpo -c -o src/snes9x_gtk-gtk_preferences.o `test -f 'src/gtk_preferences.cpp' || echo '$(srcdir)/'`src/gtk_preferences.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Po
#	$(AM_V_CXX)source='src/gtk_preferences.cpp' object='src/snes9x_gtk-gtk_preferences.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_preferences.o `test -f 'src/gtk_preferences.cpp' || echo '$(srcdir)/'`src/gtk_preferences.cpp

src/snes9x_gtk-gtk_preferences.obj: src/gtk_preferences.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_preferences.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Tpo -c -o src/snes9x_gtk-gtk_preferences.obj `if test -f 'src/gtk_preferences.cpp'; then $(CYGPATH_W) 'src/gtk_preferences.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_preferences.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_preferences.Po
#	$(AM_V_CXX)source='src/gtk_preferences.cpp' object='src/snes9x_gtk-gtk_preferences.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_preferences.obj `if test -f 'src/gtk_preferences.cpp'; then $(CYGPATH_W) 'src/gtk_preferences.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_preferences.cpp'; fi`

src/snes9x_gtk-gtk_s9x.o: src/gtk_s9x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_s9x.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Tpo -c -o src/snes9x_gtk-gtk_s9x.o `test -f 'src/gtk_s9x.cpp' || echo '$(srcdir)/'`src/gtk_s9x.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Po
#	$(AM_V_CXX)source='src/gtk_s9x.cpp' object='src/snes9x_gtk-gtk_s9x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_s9x.o `test -f 'src/gtk_s9x.cpp' || echo '$(srcdir)/'`src/gtk_s9x.cpp

src/snes9x_gtk-gtk_s9x.obj: src/gtk_s9x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_s9x.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Tpo -c -o src/snes9x_gtk-gtk_s9x.obj `if test -f 'src/gtk_s9x.cpp'; then $(CYGPATH_W) 'src/gtk_s9x.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_s9x.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_s9x.Po
#	$(AM_V_CXX)source='src/gtk_s9x.cpp' object='src/snes9x_gtk-gtk_s9x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_s9x.obj `if test -f 'src/gtk_s9x.cpp'; then $(CYGPATH_W) 'src/gtk_s9x.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_s9x.cpp'; fi`

src/snes9x_gtk-gtk_s9xwindow.o: src/gtk_s9xwindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_s9xwindow.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Tpo -c -o src/snes9x_gtk-gtk_s9xwindow.o `test -f 'src/gtk_s9xwindow.cpp' || echo '$(srcdir)/'`src/gtk_s9xwindow.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Po
#	$(AM_V_CXX)source='src/gtk_s9xwindow.cpp' object='src/snes9x_gtk-gtk_s9xwindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_s9xwindow.o `test -f 'src/gtk_s9xwindow.cpp' || echo '$(srcdir)/'`src/gtk_s9xwindow.cpp

src/snes9x_gtk-gtk_s9xwindow.obj: src/gtk_s9xwindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_s9xwindow.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Tpo -c -o src/snes9x_gtk-gtk_s9xwindow.obj `if test -f 'src/gtk_s9xwindow.cpp'; then $(CYGPATH_W) 'src/gtk_s9xwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_s9xwindow.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_s9xwindow.Po
#	$(AM_V_CXX)source='src/gtk_s9xwindow.cpp' object='src/snes9x_gtk-gtk_s9xwindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_s9xwindow.obj `if test -f 'src/gtk_s9xwindow.cpp'; then $(CYGPATH_W) 'src/gtk_s9xwindow.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_s9xwindow.cpp'; fi`

src/snes9x_gtk-gtk_sound.o: src/gtk_sound.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound.Tpo -c -o src/snes9x_gtk-gtk_sound.o `test -f 'src/gtk_sound.cpp' || echo '$(srcdir)/'`src/gtk_sound.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound.Po
#	$(AM_V_CXX)source='src/gtk_sound.cpp' object='src/snes9x_gtk-gtk_sound.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound.o `test -f 'src/gtk_sound.cpp' || echo '$(srcdir)/'`src/gtk_sound.cpp

src/snes9x_gtk-gtk_sound.obj: src/gtk_sound.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound.Tpo -c -o src/snes9x_gtk-gtk_sound.obj `if test -f 'src/gtk_sound.cpp'; then $(CYGPATH_W) 'src/gtk_sound.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound.Po
#	$(AM_V_CXX)source='src/gtk_sound.cpp' object='src/snes9x_gtk-gtk_sound.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound.obj `if test -f 'src/gtk_sound.cpp'; then $(CYGPATH_W) 'src/gtk_sound.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound.cpp'; fi`

../filter/snes9x_gtk-hq2x.o: ../filter/hq2x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../filter/snes9x_gtk-hq2x.o -MD -MP -MF ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Tpo -c -o ../filter/snes9x_gtk-hq2x.o `test -f '../filter/hq2x.cpp' || echo '$(srcdir)/'`../filter/hq2x.cpp
	$(AM_V_at)$(am__mv) ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Tpo ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Po
#	$(AM_V_CXX)source='../filter/hq2x.cpp' object='../filter/snes9x_gtk-hq2x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../filter/snes9x_gtk-hq2x.o `test -f '../filter/hq2x.cpp' || echo '$(srcdir)/'`../filter/hq2x.cpp

../filter/snes9x_gtk-hq2x.obj: ../filter/hq2x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../filter/snes9x_gtk-hq2x.obj -MD -MP -MF ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Tpo -c -o ../filter/snes9x_gtk-hq2x.obj `if test -f '../filter/hq2x.cpp'; then $(CYGPATH_W) '../filter/hq2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../filter/hq2x.cpp'; fi`
	$(AM_V_at)$(am__mv) ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Tpo ../filter/$(DEPDIR)/snes9x_gtk-hq2x.Po
#	$(AM_V_CXX)source='../filter/hq2x.cpp' object='../filter/snes9x_gtk-hq2x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../filter/snes9x_gtk-hq2x.obj `if test -f '../filter/hq2x.cpp'; then $(CYGPATH_W) '../filter/hq2x.cpp'; else $(CYGPATH_W) '$(srcdir)/../filter/hq2x.cpp'; fi`

src/snes9x_gtk-gtk_sound_driver_portaudio.o: src/gtk_sound_driver_portaudio.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_portaudio.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_portaudio.o `test -f 'src/gtk_sound_driver_portaudio.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_portaudio.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_portaudio.cpp' object='src/snes9x_gtk-gtk_sound_driver_portaudio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_portaudio.o `test -f 'src/gtk_sound_driver_portaudio.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_portaudio.cpp

src/snes9x_gtk-gtk_sound_driver_portaudio.obj: src/gtk_sound_driver_portaudio.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_portaudio.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_portaudio.obj `if test -f 'src/gtk_sound_driver_portaudio.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_portaudio.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_portaudio.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_portaudio.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_portaudio.cpp' object='src/snes9x_gtk-gtk_sound_driver_portaudio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_portaudio.obj `if test -f 'src/gtk_sound_driver_portaudio.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_portaudio.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_portaudio.cpp'; fi`

src/snes9x_gtk-gtk_sound_driver_pulse.o: src/gtk_sound_driver_pulse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_pulse.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_pulse.o `test -f 'src/gtk_sound_driver_pulse.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_pulse.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_pulse.cpp' object='src/snes9x_gtk-gtk_sound_driver_pulse.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_pulse.o `test -f 'src/gtk_sound_driver_pulse.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_pulse.cpp

src/snes9x_gtk-gtk_sound_driver_pulse.obj: src/gtk_sound_driver_pulse.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_pulse.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_pulse.obj `if test -f 'src/gtk_sound_driver_pulse.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_pulse.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_pulse.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_pulse.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_pulse.cpp' object='src/snes9x_gtk-gtk_sound_driver_pulse.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_pulse.obj `if test -f 'src/gtk_sound_driver_pulse.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_pulse.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_pulse.cpp'; fi`

src/snes9x_gtk-gtk_sound_driver_oss.o: src/gtk_sound_driver_oss.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_oss.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_oss.o `test -f 'src/gtk_sound_driver_oss.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_oss.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_oss.cpp' object='src/snes9x_gtk-gtk_sound_driver_oss.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_oss.o `test -f 'src/gtk_sound_driver_oss.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_oss.cpp

src/snes9x_gtk-gtk_sound_driver_oss.obj: src/gtk_sound_driver_oss.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_oss.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_oss.obj `if test -f 'src/gtk_sound_driver_oss.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_oss.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_oss.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_oss.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_oss.cpp' object='src/snes9x_gtk-gtk_sound_driver_oss.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_oss.obj `if test -f 'src/gtk_sound_driver_oss.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_oss.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_oss.cpp'; fi`

src/snes9x_gtk-gtk_sound_driver_sdl.o: src/gtk_sound_driver_sdl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_sdl.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_sdl.o `test -f 'src/gtk_sound_driver_sdl.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_sdl.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_sdl.cpp' object='src/snes9x_gtk-gtk_sound_driver_sdl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_sdl.o `test -f 'src/gtk_sound_driver_sdl.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_sdl.cpp

src/snes9x_gtk-gtk_sound_driver_sdl.obj: src/gtk_sound_driver_sdl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_sdl.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_sdl.obj `if test -f 'src/gtk_sound_driver_sdl.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_sdl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_sdl.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_sdl.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_sdl.cpp' object='src/snes9x_gtk-gtk_sound_driver_sdl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_sdl.obj `if test -f 'src/gtk_sound_driver_sdl.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_sdl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_sdl.cpp'; fi`

src/snes9x_gtk-gtk_sound_driver_alsa.o: src/gtk_sound_driver_alsa.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_alsa.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_alsa.o `test -f 'src/gtk_sound_driver_alsa.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_alsa.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_alsa.cpp' object='src/snes9x_gtk-gtk_sound_driver_alsa.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_alsa.o `test -f 'src/gtk_sound_driver_alsa.cpp' || echo '$(srcdir)/'`src/gtk_sound_driver_alsa.cpp

src/snes9x_gtk-gtk_sound_driver_alsa.obj: src/gtk_sound_driver_alsa.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_sound_driver_alsa.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Tpo -c -o src/snes9x_gtk-gtk_sound_driver_alsa.obj `if test -f 'src/gtk_sound_driver_alsa.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_alsa.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_alsa.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_sound_driver_alsa.Po
#	$(AM_V_CXX)source='src/gtk_sound_driver_alsa.cpp' object='src/snes9x_gtk-gtk_sound_driver_alsa.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_sound_driver_alsa.obj `if test -f 'src/gtk_sound_driver_alsa.cpp'; then $(CYGPATH_W) 'src/gtk_sound_driver_alsa.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_sound_driver_alsa.cpp'; fi`

../snes9x_gtk-fxinst.o: ../fxinst.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-fxinst.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-fxinst.Tpo -c -o ../snes9x_gtk-fxinst.o `test -f '../fxinst.cpp' || echo '$(srcdir)/'`../fxinst.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-fxinst.Tpo ../$(DEPDIR)/snes9x_gtk-fxinst.Po
#	$(AM_V_CXX)source='../fxinst.cpp' object='../snes9x_gtk-fxinst.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-fxinst.o `test -f '../fxinst.cpp' || echo '$(srcdir)/'`../fxinst.cpp

../snes9x_gtk-fxinst.obj: ../fxinst.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-fxinst.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-fxinst.Tpo -c -o ../snes9x_gtk-fxinst.obj `if test -f '../fxinst.cpp'; then $(CYGPATH_W) '../fxinst.cpp'; else $(CYGPATH_W) '$(srcdir)/../fxinst.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-fxinst.Tpo ../$(DEPDIR)/snes9x_gtk-fxinst.Po
#	$(AM_V_CXX)source='../fxinst.cpp' object='../snes9x_gtk-fxinst.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-fxinst.obj `if test -f '../fxinst.cpp'; then $(CYGPATH_W) '../fxinst.cpp'; else $(CYGPATH_W) '$(srcdir)/../fxinst.cpp'; fi`

../snes9x_gtk-fxemu.o: ../fxemu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-fxemu.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-fxemu.Tpo -c -o ../snes9x_gtk-fxemu.o `test -f '../fxemu.cpp' || echo '$(srcdir)/'`../fxemu.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-fxemu.Tpo ../$(DEPDIR)/snes9x_gtk-fxemu.Po
#	$(AM_V_CXX)source='../fxemu.cpp' object='../snes9x_gtk-fxemu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-fxemu.o `test -f '../fxemu.cpp' || echo '$(srcdir)/'`../fxemu.cpp

../snes9x_gtk-fxemu.obj: ../fxemu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-fxemu.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-fxemu.Tpo -c -o ../snes9x_gtk-fxemu.obj `if test -f '../fxemu.cpp'; then $(CYGPATH_W) '../fxemu.cpp'; else $(CYGPATH_W) '$(srcdir)/../fxemu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-fxemu.Tpo ../$(DEPDIR)/snes9x_gtk-fxemu.Po
#	$(AM_V_CXX)source='../fxemu.cpp' object='../snes9x_gtk-fxemu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-fxemu.obj `if test -f '../fxemu.cpp'; then $(CYGPATH_W) '../fxemu.cpp'; else $(CYGPATH_W) '$(srcdir)/../fxemu.cpp'; fi`

../snes9x_gtk-fxdbg.o: ../fxdbg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-fxdbg.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-fxdbg.Tpo -c -o ../snes9x_gtk-fxdbg.o `test -f '../fxdbg.cpp' || echo '$(srcdir)/'`../fxdbg.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-fxdbg.Tpo ../$(DEPDIR)/snes9x_gtk-fxdbg.Po
#	$(AM_V_CXX)source='../fxdbg.cpp' object='../snes9x_gtk-fxdbg.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-fxdbg.o `test -f '../fxdbg.cpp' || echo '$(srcdir)/'`../fxdbg.cpp

../snes9x_gtk-fxdbg.obj: ../fxdbg.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-fxdbg.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-fxdbg.Tpo -c -o ../snes9x_gtk-fxdbg.obj `if test -f '../fxdbg.cpp'; then $(CYGPATH_W) '../fxdbg.cpp'; else $(CYGPATH_W) '$(srcdir)/../fxdbg.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-fxdbg.Tpo ../$(DEPDIR)/snes9x_gtk-fxdbg.Po
#	$(AM_V_CXX)source='../fxdbg.cpp' object='../snes9x_gtk-fxdbg.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-fxdbg.obj `if test -f '../fxdbg.cpp'; then $(CYGPATH_W) '../fxdbg.cpp'; else $(CYGPATH_W) '$(srcdir)/../fxdbg.cpp'; fi`

../snes9x_gtk-c4.o: ../c4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-c4.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-c4.Tpo -c -o ../snes9x_gtk-c4.o `test -f '../c4.cpp' || echo '$(srcdir)/'`../c4.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-c4.Tpo ../$(DEPDIR)/snes9x_gtk-c4.Po
#	$(AM_V_CXX)source='../c4.cpp' object='../snes9x_gtk-c4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-c4.o `test -f '../c4.cpp' || echo '$(srcdir)/'`../c4.cpp

../snes9x_gtk-c4.obj: ../c4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-c4.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-c4.Tpo -c -o ../snes9x_gtk-c4.obj `if test -f '../c4.cpp'; then $(CYGPATH_W) '../c4.cpp'; else $(CYGPATH_W) '$(srcdir)/../c4.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-c4.Tpo ../$(DEPDIR)/snes9x_gtk-c4.Po
#	$(AM_V_CXX)source='../c4.cpp' object='../snes9x_gtk-c4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-c4.obj `if test -f '../c4.cpp'; then $(CYGPATH_W) '../c4.cpp'; else $(CYGPATH_W) '$(srcdir)/../c4.cpp'; fi`

../snes9x_gtk-c4emu.o: ../c4emu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-c4emu.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-c4emu.Tpo -c -o ../snes9x_gtk-c4emu.o `test -f '../c4emu.cpp' || echo '$(srcdir)/'`../c4emu.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-c4emu.Tpo ../$(DEPDIR)/snes9x_gtk-c4emu.Po
#	$(AM_V_CXX)source='../c4emu.cpp' object='../snes9x_gtk-c4emu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-c4emu.o `test -f '../c4emu.cpp' || echo '$(srcdir)/'`../c4emu.cpp

../snes9x_gtk-c4emu.obj: ../c4emu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-c4emu.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-c4emu.Tpo -c -o ../snes9x_gtk-c4emu.obj `if test -f '../c4emu.cpp'; then $(CYGPATH_W) '../c4emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../c4emu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-c4emu.Tpo ../$(DEPDIR)/snes9x_gtk-c4emu.Po
#	$(AM_V_CXX)source='../c4emu.cpp' object='../snes9x_gtk-c4emu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-c4emu.obj `if test -f '../c4emu.cpp'; then $(CYGPATH_W) '../c4emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../c4emu.cpp'; fi`

../apu/snes9x_gtk-apu.o: ../apu/apu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/snes9x_gtk-apu.o -MD -MP -MF ../apu/$(DEPDIR)/snes9x_gtk-apu.Tpo -c -o ../apu/snes9x_gtk-apu.o `test -f '../apu/apu.cpp' || echo '$(srcdir)/'`../apu/apu.cpp
	$(AM_V_at)$(am__mv) ../apu/$(DEPDIR)/snes9x_gtk-apu.Tpo ../apu/$(DEPDIR)/snes9x_gtk-apu.Po
#	$(AM_V_CXX)source='../apu/apu.cpp' object='../apu/snes9x_gtk-apu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/snes9x_gtk-apu.o `test -f '../apu/apu.cpp' || echo '$(srcdir)/'`../apu/apu.cpp

../apu/snes9x_gtk-apu.obj: ../apu/apu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/snes9x_gtk-apu.obj -MD -MP -MF ../apu/$(DEPDIR)/snes9x_gtk-apu.Tpo -c -o ../apu/snes9x_gtk-apu.obj `if test -f '../apu/apu.cpp'; then $(CYGPATH_W) '../apu/apu.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/apu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../apu/$(DEPDIR)/snes9x_gtk-apu.Tpo ../apu/$(DEPDIR)/snes9x_gtk-apu.Po
#	$(AM_V_CXX)source='../apu/apu.cpp' object='../apu/snes9x_gtk-apu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/snes9x_gtk-apu.obj `if test -f '../apu/apu.cpp'; then $(CYGPATH_W) '../apu/apu.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/apu.cpp'; fi`

../apu/bapu/dsp/snes9x_gtk-sdsp.o: ../apu/bapu/dsp/sdsp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/dsp/snes9x_gtk-sdsp.o -MD -MP -MF ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Tpo -c -o ../apu/bapu/dsp/snes9x_gtk-sdsp.o `test -f '../apu/bapu/dsp/sdsp.cpp' || echo '$(srcdir)/'`../apu/bapu/dsp/sdsp.cpp
	$(AM_V_at)$(am__mv) ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Tpo ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Po
#	$(AM_V_CXX)source='../apu/bapu/dsp/sdsp.cpp' object='../apu/bapu/dsp/snes9x_gtk-sdsp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/dsp/snes9x_gtk-sdsp.o `test -f '../apu/bapu/dsp/sdsp.cpp' || echo '$(srcdir)/'`../apu/bapu/dsp/sdsp.cpp

../apu/bapu/dsp/snes9x_gtk-sdsp.obj: ../apu/bapu/dsp/sdsp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/dsp/snes9x_gtk-sdsp.obj -MD -MP -MF ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Tpo -c -o ../apu/bapu/dsp/snes9x_gtk-sdsp.obj `if test -f '../apu/bapu/dsp/sdsp.cpp'; then $(CYGPATH_W) '../apu/bapu/dsp/sdsp.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/dsp/sdsp.cpp'; fi`
	$(AM_V_at)$(am__mv) ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Tpo ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-sdsp.Po
#	$(AM_V_CXX)source='../apu/bapu/dsp/sdsp.cpp' object='../apu/bapu/dsp/snes9x_gtk-sdsp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/dsp/snes9x_gtk-sdsp.obj `if test -f '../apu/bapu/dsp/sdsp.cpp'; then $(CYGPATH_W) '../apu/bapu/dsp/sdsp.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/dsp/sdsp.cpp'; fi`

../apu/bapu/dsp/snes9x_gtk-SPC_DSP.o: ../apu/bapu/dsp/SPC_DSP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/dsp/snes9x_gtk-SPC_DSP.o -MD -MP -MF ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Tpo -c -o ../apu/bapu/dsp/snes9x_gtk-SPC_DSP.o `test -f '../apu/bapu/dsp/SPC_DSP.cpp' || echo '$(srcdir)/'`../apu/bapu/dsp/SPC_DSP.cpp
	$(AM_V_at)$(am__mv) ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Tpo ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Po
#	$(AM_V_CXX)source='../apu/bapu/dsp/SPC_DSP.cpp' object='../apu/bapu/dsp/snes9x_gtk-SPC_DSP.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/dsp/snes9x_gtk-SPC_DSP.o `test -f '../apu/bapu/dsp/SPC_DSP.cpp' || echo '$(srcdir)/'`../apu/bapu/dsp/SPC_DSP.cpp

../apu/bapu/dsp/snes9x_gtk-SPC_DSP.obj: ../apu/bapu/dsp/SPC_DSP.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/dsp/snes9x_gtk-SPC_DSP.obj -MD -MP -MF ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Tpo -c -o ../apu/bapu/dsp/snes9x_gtk-SPC_DSP.obj `if test -f '../apu/bapu/dsp/SPC_DSP.cpp'; then $(CYGPATH_W) '../apu/bapu/dsp/SPC_DSP.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/dsp/SPC_DSP.cpp'; fi`
	$(AM_V_at)$(am__mv) ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Tpo ../apu/bapu/dsp/$(DEPDIR)/snes9x_gtk-SPC_DSP.Po
#	$(AM_V_CXX)source='../apu/bapu/dsp/SPC_DSP.cpp' object='../apu/bapu/dsp/snes9x_gtk-SPC_DSP.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/dsp/snes9x_gtk-SPC_DSP.obj `if test -f '../apu/bapu/dsp/SPC_DSP.cpp'; then $(CYGPATH_W) '../apu/bapu/dsp/SPC_DSP.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/dsp/SPC_DSP.cpp'; fi`

../apu/bapu/smp/snes9x_gtk-smp.o: ../apu/bapu/smp/smp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/smp/snes9x_gtk-smp.o -MD -MP -MF ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Tpo -c -o ../apu/bapu/smp/snes9x_gtk-smp.o `test -f '../apu/bapu/smp/smp.cpp' || echo '$(srcdir)/'`../apu/bapu/smp/smp.cpp
	$(AM_V_at)$(am__mv) ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Tpo ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Po
#	$(AM_V_CXX)source='../apu/bapu/smp/smp.cpp' object='../apu/bapu/smp/snes9x_gtk-smp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/smp/snes9x_gtk-smp.o `test -f '../apu/bapu/smp/smp.cpp' || echo '$(srcdir)/'`../apu/bapu/smp/smp.cpp

../apu/bapu/smp/snes9x_gtk-smp.obj: ../apu/bapu/smp/smp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/smp/snes9x_gtk-smp.obj -MD -MP -MF ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Tpo -c -o ../apu/bapu/smp/snes9x_gtk-smp.obj `if test -f '../apu/bapu/smp/smp.cpp'; then $(CYGPATH_W) '../apu/bapu/smp/smp.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/smp/smp.cpp'; fi`
	$(AM_V_at)$(am__mv) ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Tpo ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp.Po
#	$(AM_V_CXX)source='../apu/bapu/smp/smp.cpp' object='../apu/bapu/smp/snes9x_gtk-smp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/smp/snes9x_gtk-smp.obj `if test -f '../apu/bapu/smp/smp.cpp'; then $(CYGPATH_W) '../apu/bapu/smp/smp.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/smp/smp.cpp'; fi`

../apu/bapu/smp/snes9x_gtk-smp_state.o: ../apu/bapu/smp/smp_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/smp/snes9x_gtk-smp_state.o -MD -MP -MF ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Tpo -c -o ../apu/bapu/smp/snes9x_gtk-smp_state.o `test -f '../apu/bapu/smp/smp_state.cpp' || echo '$(srcdir)/'`../apu/bapu/smp/smp_state.cpp
	$(AM_V_at)$(am__mv) ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Tpo ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Po
#	$(AM_V_CXX)source='../apu/bapu/smp/smp_state.cpp' object='../apu/bapu/smp/snes9x_gtk-smp_state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/smp/snes9x_gtk-smp_state.o `test -f '../apu/bapu/smp/smp_state.cpp' || echo '$(srcdir)/'`../apu/bapu/smp/smp_state.cpp

../apu/bapu/smp/snes9x_gtk-smp_state.obj: ../apu/bapu/smp/smp_state.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../apu/bapu/smp/snes9x_gtk-smp_state.obj -MD -MP -MF ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Tpo -c -o ../apu/bapu/smp/snes9x_gtk-smp_state.obj `if test -f '../apu/bapu/smp/smp_state.cpp'; then $(CYGPATH_W) '../apu/bapu/smp/smp_state.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/smp/smp_state.cpp'; fi`
	$(AM_V_at)$(am__mv) ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Tpo ../apu/bapu/smp/$(DEPDIR)/snes9x_gtk-smp_state.Po
#	$(AM_V_CXX)source='../apu/bapu/smp/smp_state.cpp' object='../apu/bapu/smp/snes9x_gtk-smp_state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../apu/bapu/smp/snes9x_gtk-smp_state.obj `if test -f '../apu/bapu/smp/smp_state.cpp'; then $(CYGPATH_W) '../apu/bapu/smp/smp_state.cpp'; else $(CYGPATH_W) '$(srcdir)/../apu/bapu/smp/smp_state.cpp'; fi`

../snes9x_gtk-dsp.o: ../dsp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp.Tpo -c -o ../snes9x_gtk-dsp.o `test -f '../dsp.cpp' || echo '$(srcdir)/'`../dsp.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp.Tpo ../$(DEPDIR)/snes9x_gtk-dsp.Po
#	$(AM_V_CXX)source='../dsp.cpp' object='../snes9x_gtk-dsp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp.o `test -f '../dsp.cpp' || echo '$(srcdir)/'`../dsp.cpp

../snes9x_gtk-dsp.obj: ../dsp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp.Tpo -c -o ../snes9x_gtk-dsp.obj `if test -f '../dsp.cpp'; then $(CYGPATH_W) '../dsp.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp.Tpo ../$(DEPDIR)/snes9x_gtk-dsp.Po
#	$(AM_V_CXX)source='../dsp.cpp' object='../snes9x_gtk-dsp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp.obj `if test -f '../dsp.cpp'; then $(CYGPATH_W) '../dsp.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp.cpp'; fi`

../snes9x_gtk-dsp1.o: ../dsp1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp1.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp1.Tpo -c -o ../snes9x_gtk-dsp1.o `test -f '../dsp1.cpp' || echo '$(srcdir)/'`../dsp1.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp1.Tpo ../$(DEPDIR)/snes9x_gtk-dsp1.Po
#	$(AM_V_CXX)source='../dsp1.cpp' object='../snes9x_gtk-dsp1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp1.o `test -f '../dsp1.cpp' || echo '$(srcdir)/'`../dsp1.cpp

../snes9x_gtk-dsp1.obj: ../dsp1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp1.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp1.Tpo -c -o ../snes9x_gtk-dsp1.obj `if test -f '../dsp1.cpp'; then $(CYGPATH_W) '../dsp1.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp1.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp1.Tpo ../$(DEPDIR)/snes9x_gtk-dsp1.Po
#	$(AM_V_CXX)source='../dsp1.cpp' object='../snes9x_gtk-dsp1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp1.obj `if test -f '../dsp1.cpp'; then $(CYGPATH_W) '../dsp1.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp1.cpp'; fi`

../snes9x_gtk-dsp2.o: ../dsp2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp2.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp2.Tpo -c -o ../snes9x_gtk-dsp2.o `test -f '../dsp2.cpp' || echo '$(srcdir)/'`../dsp2.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp2.Tpo ../$(DEPDIR)/snes9x_gtk-dsp2.Po
#	$(AM_V_CXX)source='../dsp2.cpp' object='../snes9x_gtk-dsp2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp2.o `test -f '../dsp2.cpp' || echo '$(srcdir)/'`../dsp2.cpp

../snes9x_gtk-dsp2.obj: ../dsp2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp2.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp2.Tpo -c -o ../snes9x_gtk-dsp2.obj `if test -f '../dsp2.cpp'; then $(CYGPATH_W) '../dsp2.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp2.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp2.Tpo ../$(DEPDIR)/snes9x_gtk-dsp2.Po
#	$(AM_V_CXX)source='../dsp2.cpp' object='../snes9x_gtk-dsp2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp2.obj `if test -f '../dsp2.cpp'; then $(CYGPATH_W) '../dsp2.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp2.cpp'; fi`

../snes9x_gtk-dsp3.o: ../dsp3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp3.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp3.Tpo -c -o ../snes9x_gtk-dsp3.o `test -f '../dsp3.cpp' || echo '$(srcdir)/'`../dsp3.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp3.Tpo ../$(DEPDIR)/snes9x_gtk-dsp3.Po
#	$(AM_V_CXX)source='../dsp3.cpp' object='../snes9x_gtk-dsp3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp3.o `test -f '../dsp3.cpp' || echo '$(srcdir)/'`../dsp3.cpp

../snes9x_gtk-dsp3.obj: ../dsp3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp3.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp3.Tpo -c -o ../snes9x_gtk-dsp3.obj `if test -f '../dsp3.cpp'; then $(CYGPATH_W) '../dsp3.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp3.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp3.Tpo ../$(DEPDIR)/snes9x_gtk-dsp3.Po
#	$(AM_V_CXX)source='../dsp3.cpp' object='../snes9x_gtk-dsp3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp3.obj `if test -f '../dsp3.cpp'; then $(CYGPATH_W) '../dsp3.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp3.cpp'; fi`

../snes9x_gtk-dsp4.o: ../dsp4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp4.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp4.Tpo -c -o ../snes9x_gtk-dsp4.o `test -f '../dsp4.cpp' || echo '$(srcdir)/'`../dsp4.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp4.Tpo ../$(DEPDIR)/snes9x_gtk-dsp4.Po
#	$(AM_V_CXX)source='../dsp4.cpp' object='../snes9x_gtk-dsp4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp4.o `test -f '../dsp4.cpp' || echo '$(srcdir)/'`../dsp4.cpp

../snes9x_gtk-dsp4.obj: ../dsp4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dsp4.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dsp4.Tpo -c -o ../snes9x_gtk-dsp4.obj `if test -f '../dsp4.cpp'; then $(CYGPATH_W) '../dsp4.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp4.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dsp4.Tpo ../$(DEPDIR)/snes9x_gtk-dsp4.Po
#	$(AM_V_CXX)source='../dsp4.cpp' object='../snes9x_gtk-dsp4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dsp4.obj `if test -f '../dsp4.cpp'; then $(CYGPATH_W) '../dsp4.cpp'; else $(CYGPATH_W) '$(srcdir)/../dsp4.cpp'; fi`

../snes9x_gtk-spc7110.o: ../spc7110.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-spc7110.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-spc7110.Tpo -c -o ../snes9x_gtk-spc7110.o `test -f '../spc7110.cpp' || echo '$(srcdir)/'`../spc7110.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-spc7110.Tpo ../$(DEPDIR)/snes9x_gtk-spc7110.Po
#	$(AM_V_CXX)source='../spc7110.cpp' object='../snes9x_gtk-spc7110.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-spc7110.o `test -f '../spc7110.cpp' || echo '$(srcdir)/'`../spc7110.cpp

../snes9x_gtk-spc7110.obj: ../spc7110.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-spc7110.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-spc7110.Tpo -c -o ../snes9x_gtk-spc7110.obj `if test -f '../spc7110.cpp'; then $(CYGPATH_W) '../spc7110.cpp'; else $(CYGPATH_W) '$(srcdir)/../spc7110.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-spc7110.Tpo ../$(DEPDIR)/snes9x_gtk-spc7110.Po
#	$(AM_V_CXX)source='../spc7110.cpp' object='../snes9x_gtk-spc7110.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-spc7110.obj `if test -f '../spc7110.cpp'; then $(CYGPATH_W) '../spc7110.cpp'; else $(CYGPATH_W) '$(srcdir)/../spc7110.cpp'; fi`

../snes9x_gtk-obc1.o: ../obc1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-obc1.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-obc1.Tpo -c -o ../snes9x_gtk-obc1.o `test -f '../obc1.cpp' || echo '$(srcdir)/'`../obc1.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-obc1.Tpo ../$(DEPDIR)/snes9x_gtk-obc1.Po
#	$(AM_V_CXX)source='../obc1.cpp' object='../snes9x_gtk-obc1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-obc1.o `test -f '../obc1.cpp' || echo '$(srcdir)/'`../obc1.cpp

../snes9x_gtk-obc1.obj: ../obc1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-obc1.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-obc1.Tpo -c -o ../snes9x_gtk-obc1.obj `if test -f '../obc1.cpp'; then $(CYGPATH_W) '../obc1.cpp'; else $(CYGPATH_W) '$(srcdir)/../obc1.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-obc1.Tpo ../$(DEPDIR)/snes9x_gtk-obc1.Po
#	$(AM_V_CXX)source='../obc1.cpp' object='../snes9x_gtk-obc1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-obc1.obj `if test -f '../obc1.cpp'; then $(CYGPATH_W) '../obc1.cpp'; else $(CYGPATH_W) '$(srcdir)/../obc1.cpp'; fi`

../snes9x_gtk-seta.o: ../seta.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta.Tpo -c -o ../snes9x_gtk-seta.o `test -f '../seta.cpp' || echo '$(srcdir)/'`../seta.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta.Tpo ../$(DEPDIR)/snes9x_gtk-seta.Po
#	$(AM_V_CXX)source='../seta.cpp' object='../snes9x_gtk-seta.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta.o `test -f '../seta.cpp' || echo '$(srcdir)/'`../seta.cpp

../snes9x_gtk-seta.obj: ../seta.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta.Tpo -c -o ../snes9x_gtk-seta.obj `if test -f '../seta.cpp'; then $(CYGPATH_W) '../seta.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta.Tpo ../$(DEPDIR)/snes9x_gtk-seta.Po
#	$(AM_V_CXX)source='../seta.cpp' object='../snes9x_gtk-seta.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta.obj `if test -f '../seta.cpp'; then $(CYGPATH_W) '../seta.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta.cpp'; fi`

../snes9x_gtk-seta010.o: ../seta010.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta010.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta010.Tpo -c -o ../snes9x_gtk-seta010.o `test -f '../seta010.cpp' || echo '$(srcdir)/'`../seta010.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta010.Tpo ../$(DEPDIR)/snes9x_gtk-seta010.Po
#	$(AM_V_CXX)source='../seta010.cpp' object='../snes9x_gtk-seta010.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta010.o `test -f '../seta010.cpp' || echo '$(srcdir)/'`../seta010.cpp

../snes9x_gtk-seta010.obj: ../seta010.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta010.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta010.Tpo -c -o ../snes9x_gtk-seta010.obj `if test -f '../seta010.cpp'; then $(CYGPATH_W) '../seta010.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta010.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta010.Tpo ../$(DEPDIR)/snes9x_gtk-seta010.Po
#	$(AM_V_CXX)source='../seta010.cpp' object='../snes9x_gtk-seta010.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta010.obj `if test -f '../seta010.cpp'; then $(CYGPATH_W) '../seta010.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta010.cpp'; fi`

../snes9x_gtk-seta011.o: ../seta011.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta011.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta011.Tpo -c -o ../snes9x_gtk-seta011.o `test -f '../seta011.cpp' || echo '$(srcdir)/'`../seta011.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta011.Tpo ../$(DEPDIR)/snes9x_gtk-seta011.Po
#	$(AM_V_CXX)source='../seta011.cpp' object='../snes9x_gtk-seta011.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta011.o `test -f '../seta011.cpp' || echo '$(srcdir)/'`../seta011.cpp

../snes9x_gtk-seta011.obj: ../seta011.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta011.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta011.Tpo -c -o ../snes9x_gtk-seta011.obj `if test -f '../seta011.cpp'; then $(CYGPATH_W) '../seta011.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta011.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta011.Tpo ../$(DEPDIR)/snes9x_gtk-seta011.Po
#	$(AM_V_CXX)source='../seta011.cpp' object='../snes9x_gtk-seta011.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta011.obj `if test -f '../seta011.cpp'; then $(CYGPATH_W) '../seta011.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta011.cpp'; fi`

../snes9x_gtk-seta018.o: ../seta018.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta018.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta018.Tpo -c -o ../snes9x_gtk-seta018.o `test -f '../seta018.cpp' || echo '$(srcdir)/'`../seta018.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta018.Tpo ../$(DEPDIR)/snes9x_gtk-seta018.Po
#	$(AM_V_CXX)source='../seta018.cpp' object='../snes9x_gtk-seta018.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta018.o `test -f '../seta018.cpp' || echo '$(srcdir)/'`../seta018.cpp

../snes9x_gtk-seta018.obj: ../seta018.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-seta018.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-seta018.Tpo -c -o ../snes9x_gtk-seta018.obj `if test -f '../seta018.cpp'; then $(CYGPATH_W) '../seta018.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta018.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-seta018.Tpo ../$(DEPDIR)/snes9x_gtk-seta018.Po
#	$(AM_V_CXX)source='../seta018.cpp' object='../snes9x_gtk-seta018.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-seta018.obj `if test -f '../seta018.cpp'; then $(CYGPATH_W) '../seta018.cpp'; else $(CYGPATH_W) '$(srcdir)/../seta018.cpp'; fi`

../snes9x_gtk-controls.o: ../controls.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-controls.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-controls.Tpo -c -o ../snes9x_gtk-controls.o `test -f '../controls.cpp' || echo '$(srcdir)/'`../controls.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-controls.Tpo ../$(DEPDIR)/snes9x_gtk-controls.Po
#	$(AM_V_CXX)source='../controls.cpp' object='../snes9x_gtk-controls.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-controls.o `test -f '../controls.cpp' || echo '$(srcdir)/'`../controls.cpp

../snes9x_gtk-controls.obj: ../controls.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-controls.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-controls.Tpo -c -o ../snes9x_gtk-controls.obj `if test -f '../controls.cpp'; then $(CYGPATH_W) '../controls.cpp'; else $(CYGPATH_W) '$(srcdir)/../controls.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-controls.Tpo ../$(DEPDIR)/snes9x_gtk-controls.Po
#	$(AM_V_CXX)source='../controls.cpp' object='../snes9x_gtk-controls.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-controls.obj `if test -f '../controls.cpp'; then $(CYGPATH_W) '../controls.cpp'; else $(CYGPATH_W) '$(srcdir)/../controls.cpp'; fi`

../snes9x_gtk-crosshairs.o: ../crosshairs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-crosshairs.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-crosshairs.Tpo -c -o ../snes9x_gtk-crosshairs.o `test -f '../crosshairs.cpp' || echo '$(srcdir)/'`../crosshairs.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-crosshairs.Tpo ../$(DEPDIR)/snes9x_gtk-crosshairs.Po
#	$(AM_V_CXX)source='../crosshairs.cpp' object='../snes9x_gtk-crosshairs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-crosshairs.o `test -f '../crosshairs.cpp' || echo '$(srcdir)/'`../crosshairs.cpp

../snes9x_gtk-crosshairs.obj: ../crosshairs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-crosshairs.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-crosshairs.Tpo -c -o ../snes9x_gtk-crosshairs.obj `if test -f '../crosshairs.cpp'; then $(CYGPATH_W) '../crosshairs.cpp'; else $(CYGPATH_W) '$(srcdir)/../crosshairs.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-crosshairs.Tpo ../$(DEPDIR)/snes9x_gtk-crosshairs.Po
#	$(AM_V_CXX)source='../crosshairs.cpp' object='../snes9x_gtk-crosshairs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-crosshairs.obj `if test -f '../crosshairs.cpp'; then $(CYGPATH_W) '../crosshairs.cpp'; else $(CYGPATH_W) '$(srcdir)/../crosshairs.cpp'; fi`

../snes9x_gtk-cpu.o: ../cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cpu.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cpu.Tpo -c -o ../snes9x_gtk-cpu.o `test -f '../cpu.cpp' || echo '$(srcdir)/'`../cpu.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cpu.Tpo ../$(DEPDIR)/snes9x_gtk-cpu.Po
#	$(AM_V_CXX)source='../cpu.cpp' object='../snes9x_gtk-cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cpu.o `test -f '../cpu.cpp' || echo '$(srcdir)/'`../cpu.cpp

../snes9x_gtk-cpu.obj: ../cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cpu.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cpu.Tpo -c -o ../snes9x_gtk-cpu.obj `if test -f '../cpu.cpp'; then $(CYGPATH_W) '../cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/../cpu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cpu.Tpo ../$(DEPDIR)/snes9x_gtk-cpu.Po
#	$(AM_V_CXX)source='../cpu.cpp' object='../snes9x_gtk-cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cpu.obj `if test -f '../cpu.cpp'; then $(CYGPATH_W) '../cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/../cpu.cpp'; fi`

../snes9x_gtk-sa1.o: ../sa1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sa1.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sa1.Tpo -c -o ../snes9x_gtk-sa1.o `test -f '../sa1.cpp' || echo '$(srcdir)/'`../sa1.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sa1.Tpo ../$(DEPDIR)/snes9x_gtk-sa1.Po
#	$(AM_V_CXX)source='../sa1.cpp' object='../snes9x_gtk-sa1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sa1.o `test -f '../sa1.cpp' || echo '$(srcdir)/'`../sa1.cpp

../snes9x_gtk-sa1.obj: ../sa1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sa1.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sa1.Tpo -c -o ../snes9x_gtk-sa1.obj `if test -f '../sa1.cpp'; then $(CYGPATH_W) '../sa1.cpp'; else $(CYGPATH_W) '$(srcdir)/../sa1.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sa1.Tpo ../$(DEPDIR)/snes9x_gtk-sa1.Po
#	$(AM_V_CXX)source='../sa1.cpp' object='../snes9x_gtk-sa1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sa1.obj `if test -f '../sa1.cpp'; then $(CYGPATH_W) '../sa1.cpp'; else $(CYGPATH_W) '$(srcdir)/../sa1.cpp'; fi`

../snes9x_gtk-debug.o: ../debug.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-debug.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-debug.Tpo -c -o ../snes9x_gtk-debug.o `test -f '../debug.cpp' || echo '$(srcdir)/'`../debug.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-debug.Tpo ../$(DEPDIR)/snes9x_gtk-debug.Po
#	$(AM_V_CXX)source='../debug.cpp' object='../snes9x_gtk-debug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-debug.o `test -f '../debug.cpp' || echo '$(srcdir)/'`../debug.cpp

../snes9x_gtk-debug.obj: ../debug.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-debug.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-debug.Tpo -c -o ../snes9x_gtk-debug.obj `if test -f '../debug.cpp'; then $(CYGPATH_W) '../debug.cpp'; else $(CYGPATH_W) '$(srcdir)/../debug.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-debug.Tpo ../$(DEPDIR)/snes9x_gtk-debug.Po
#	$(AM_V_CXX)source='../debug.cpp' object='../snes9x_gtk-debug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-debug.obj `if test -f '../debug.cpp'; then $(CYGPATH_W) '../debug.cpp'; else $(CYGPATH_W) '$(srcdir)/../debug.cpp'; fi`

../snes9x_gtk-sdd1.o: ../sdd1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sdd1.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sdd1.Tpo -c -o ../snes9x_gtk-sdd1.o `test -f '../sdd1.cpp' || echo '$(srcdir)/'`../sdd1.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sdd1.Tpo ../$(DEPDIR)/snes9x_gtk-sdd1.Po
#	$(AM_V_CXX)source='../sdd1.cpp' object='../snes9x_gtk-sdd1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sdd1.o `test -f '../sdd1.cpp' || echo '$(srcdir)/'`../sdd1.cpp

../snes9x_gtk-sdd1.obj: ../sdd1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sdd1.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sdd1.Tpo -c -o ../snes9x_gtk-sdd1.obj `if test -f '../sdd1.cpp'; then $(CYGPATH_W) '../sdd1.cpp'; else $(CYGPATH_W) '$(srcdir)/../sdd1.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sdd1.Tpo ../$(DEPDIR)/snes9x_gtk-sdd1.Po
#	$(AM_V_CXX)source='../sdd1.cpp' object='../snes9x_gtk-sdd1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sdd1.obj `if test -f '../sdd1.cpp'; then $(CYGPATH_W) '../sdd1.cpp'; else $(CYGPATH_W) '$(srcdir)/../sdd1.cpp'; fi`

../snes9x_gtk-tile.o: ../tile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-tile.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-tile.Tpo -c -o ../snes9x_gtk-tile.o `test -f '../tile.cpp' || echo '$(srcdir)/'`../tile.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-tile.Tpo ../$(DEPDIR)/snes9x_gtk-tile.Po
#	$(AM_V_CXX)source='../tile.cpp' object='../snes9x_gtk-tile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-tile.o `test -f '../tile.cpp' || echo '$(srcdir)/'`../tile.cpp

../snes9x_gtk-tile.obj: ../tile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-tile.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-tile.Tpo -c -o ../snes9x_gtk-tile.obj `if test -f '../tile.cpp'; then $(CYGPATH_W) '../tile.cpp'; else $(CYGPATH_W) '$(srcdir)/../tile.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-tile.Tpo ../$(DEPDIR)/snes9x_gtk-tile.Po
#	$(AM_V_CXX)source='../tile.cpp' object='../snes9x_gtk-tile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-tile.obj `if test -f '../tile.cpp'; then $(CYGPATH_W) '../tile.cpp'; else $(CYGPATH_W) '$(srcdir)/../tile.cpp'; fi`

../snes9x_gtk-srtc.o: ../srtc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-srtc.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-srtc.Tpo -c -o ../snes9x_gtk-srtc.o `test -f '../srtc.cpp' || echo '$(srcdir)/'`../srtc.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-srtc.Tpo ../$(DEPDIR)/snes9x_gtk-srtc.Po
#	$(AM_V_CXX)source='../srtc.cpp' object='../snes9x_gtk-srtc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-srtc.o `test -f '../srtc.cpp' || echo '$(srcdir)/'`../srtc.cpp

../snes9x_gtk-srtc.obj: ../srtc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-srtc.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-srtc.Tpo -c -o ../snes9x_gtk-srtc.obj `if test -f '../srtc.cpp'; then $(CYGPATH_W) '../srtc.cpp'; else $(CYGPATH_W) '$(srcdir)/../srtc.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-srtc.Tpo ../$(DEPDIR)/snes9x_gtk-srtc.Po
#	$(AM_V_CXX)source='../srtc.cpp' object='../snes9x_gtk-srtc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-srtc.obj `if test -f '../srtc.cpp'; then $(CYGPATH_W) '../srtc.cpp'; else $(CYGPATH_W) '$(srcdir)/../srtc.cpp'; fi`

../snes9x_gtk-gfx.o: ../gfx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-gfx.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-gfx.Tpo -c -o ../snes9x_gtk-gfx.o `test -f '../gfx.cpp' || echo '$(srcdir)/'`../gfx.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-gfx.Tpo ../$(DEPDIR)/snes9x_gtk-gfx.Po
#	$(AM_V_CXX)source='../gfx.cpp' object='../snes9x_gtk-gfx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-gfx.o `test -f '../gfx.cpp' || echo '$(srcdir)/'`../gfx.cpp

../snes9x_gtk-gfx.obj: ../gfx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-gfx.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-gfx.Tpo -c -o ../snes9x_gtk-gfx.obj `if test -f '../gfx.cpp'; then $(CYGPATH_W) '../gfx.cpp'; else $(CYGPATH_W) '$(srcdir)/../gfx.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-gfx.Tpo ../$(DEPDIR)/snes9x_gtk-gfx.Po
#	$(AM_V_CXX)source='../gfx.cpp' object='../snes9x_gtk-gfx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-gfx.obj `if test -f '../gfx.cpp'; then $(CYGPATH_W) '../gfx.cpp'; else $(CYGPATH_W) '$(srcdir)/../gfx.cpp'; fi`

../snes9x_gtk-memmap.o: ../memmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-memmap.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-memmap.Tpo -c -o ../snes9x_gtk-memmap.o `test -f '../memmap.cpp' || echo '$(srcdir)/'`../memmap.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-memmap.Tpo ../$(DEPDIR)/snes9x_gtk-memmap.Po
#	$(AM_V_CXX)source='../memmap.cpp' object='../snes9x_gtk-memmap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-memmap.o `test -f '../memmap.cpp' || echo '$(srcdir)/'`../memmap.cpp

../snes9x_gtk-memmap.obj: ../memmap.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-memmap.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-memmap.Tpo -c -o ../snes9x_gtk-memmap.obj `if test -f '../memmap.cpp'; then $(CYGPATH_W) '../memmap.cpp'; else $(CYGPATH_W) '$(srcdir)/../memmap.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-memmap.Tpo ../$(DEPDIR)/snes9x_gtk-memmap.Po
#	$(AM_V_CXX)source='../memmap.cpp' object='../snes9x_gtk-memmap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-memmap.obj `if test -f '../memmap.cpp'; then $(CYGPATH_W) '../memmap.cpp'; else $(CYGPATH_W) '$(srcdir)/../memmap.cpp'; fi`

../snes9x_gtk-clip.o: ../clip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-clip.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-clip.Tpo -c -o ../snes9x_gtk-clip.o `test -f '../clip.cpp' || echo '$(srcdir)/'`../clip.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-clip.Tpo ../$(DEPDIR)/snes9x_gtk-clip.Po
#	$(AM_V_CXX)source='../clip.cpp' object='../snes9x_gtk-clip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-clip.o `test -f '../clip.cpp' || echo '$(srcdir)/'`../clip.cpp

../snes9x_gtk-clip.obj: ../clip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-clip.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-clip.Tpo -c -o ../snes9x_gtk-clip.obj `if test -f '../clip.cpp'; then $(CYGPATH_W) '../clip.cpp'; else $(CYGPATH_W) '$(srcdir)/../clip.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-clip.Tpo ../$(DEPDIR)/snes9x_gtk-clip.Po
#	$(AM_V_CXX)source='../clip.cpp' object='../snes9x_gtk-clip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-clip.obj `if test -f '../clip.cpp'; then $(CYGPATH_W) '../clip.cpp'; else $(CYGPATH_W) '$(srcdir)/../clip.cpp'; fi`

../snes9x_gtk-ppu.o: ../ppu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-ppu.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-ppu.Tpo -c -o ../snes9x_gtk-ppu.o `test -f '../ppu.cpp' || echo '$(srcdir)/'`../ppu.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-ppu.Tpo ../$(DEPDIR)/snes9x_gtk-ppu.Po
#	$(AM_V_CXX)source='../ppu.cpp' object='../snes9x_gtk-ppu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-ppu.o `test -f '../ppu.cpp' || echo '$(srcdir)/'`../ppu.cpp

../snes9x_gtk-ppu.obj: ../ppu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-ppu.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-ppu.Tpo -c -o ../snes9x_gtk-ppu.obj `if test -f '../ppu.cpp'; then $(CYGPATH_W) '../ppu.cpp'; else $(CYGPATH_W) '$(srcdir)/../ppu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-ppu.Tpo ../$(DEPDIR)/snes9x_gtk-ppu.Po
#	$(AM_V_CXX)source='../ppu.cpp' object='../snes9x_gtk-ppu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-ppu.obj `if test -f '../ppu.cpp'; then $(CYGPATH_W) '../ppu.cpp'; else $(CYGPATH_W) '$(srcdir)/../ppu.cpp'; fi`

../snes9x_gtk-dma.o: ../dma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dma.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dma.Tpo -c -o ../snes9x_gtk-dma.o `test -f '../dma.cpp' || echo '$(srcdir)/'`../dma.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dma.Tpo ../$(DEPDIR)/snes9x_gtk-dma.Po
#	$(AM_V_CXX)source='../dma.cpp' object='../snes9x_gtk-dma.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dma.o `test -f '../dma.cpp' || echo '$(srcdir)/'`../dma.cpp

../snes9x_gtk-dma.obj: ../dma.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-dma.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-dma.Tpo -c -o ../snes9x_gtk-dma.obj `if test -f '../dma.cpp'; then $(CYGPATH_W) '../dma.cpp'; else $(CYGPATH_W) '$(srcdir)/../dma.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-dma.Tpo ../$(DEPDIR)/snes9x_gtk-dma.Po
#	$(AM_V_CXX)source='../dma.cpp' object='../snes9x_gtk-dma.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-dma.obj `if test -f '../dma.cpp'; then $(CYGPATH_W) '../dma.cpp'; else $(CYGPATH_W) '$(srcdir)/../dma.cpp'; fi`

../snes9x_gtk-snes9x.o: ../snes9x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-snes9x.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-snes9x.Tpo -c -o ../snes9x_gtk-snes9x.o `test -f '../snes9x.cpp' || echo '$(srcdir)/'`../snes9x.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-snes9x.Tpo ../$(DEPDIR)/snes9x_gtk-snes9x.Po
#	$(AM_V_CXX)source='../snes9x.cpp' object='../snes9x_gtk-snes9x.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-snes9x.o `test -f '../snes9x.cpp' || echo '$(srcdir)/'`../snes9x.cpp

../snes9x_gtk-snes9x.obj: ../snes9x.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-snes9x.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-snes9x.Tpo -c -o ../snes9x_gtk-snes9x.obj `if test -f '../snes9x.cpp'; then $(CYGPATH_W) '../snes9x.cpp'; else $(CYGPATH_W) '$(srcdir)/../snes9x.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-snes9x.Tpo ../$(DEPDIR)/snes9x_gtk-snes9x.Po
#	$(AM_V_CXX)source='../snes9x.cpp' object='../snes9x_gtk-snes9x.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-snes9x.obj `if test -f '../snes9x.cpp'; then $(CYGPATH_W) '../snes9x.cpp'; else $(CYGPATH_W) '$(srcdir)/../snes9x.cpp'; fi`

../snes9x_gtk-globals.o: ../globals.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-globals.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-globals.Tpo -c -o ../snes9x_gtk-globals.o `test -f '../globals.cpp' || echo '$(srcdir)/'`../globals.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-globals.Tpo ../$(DEPDIR)/snes9x_gtk-globals.Po
#	$(AM_V_CXX)source='../globals.cpp' object='../snes9x_gtk-globals.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-globals.o `test -f '../globals.cpp' || echo '$(srcdir)/'`../globals.cpp

../snes9x_gtk-globals.obj: ../globals.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-globals.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-globals.Tpo -c -o ../snes9x_gtk-globals.obj `if test -f '../globals.cpp'; then $(CYGPATH_W) '../globals.cpp'; else $(CYGPATH_W) '$(srcdir)/../globals.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-globals.Tpo ../$(DEPDIR)/snes9x_gtk-globals.Po
#	$(AM_V_CXX)source='../globals.cpp' object='../snes9x_gtk-globals.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-globals.obj `if test -f '../globals.cpp'; then $(CYGPATH_W) '../globals.cpp'; else $(CYGPATH_W) '$(srcdir)/../globals.cpp'; fi`

../snes9x_gtk-stream.o: ../stream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-stream.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-stream.Tpo -c -o ../snes9x_gtk-stream.o `test -f '../stream.cpp' || echo '$(srcdir)/'`../stream.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-stream.Tpo ../$(DEPDIR)/snes9x_gtk-stream.Po
#	$(AM_V_CXX)source='../stream.cpp' object='../snes9x_gtk-stream.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-stream.o `test -f '../stream.cpp' || echo '$(srcdir)/'`../stream.cpp

../snes9x_gtk-stream.obj: ../stream.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-stream.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-stream.Tpo -c -o ../snes9x_gtk-stream.obj `if test -f '../stream.cpp'; then $(CYGPATH_W) '../stream.cpp'; else $(CYGPATH_W) '$(srcdir)/../stream.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-stream.Tpo ../$(DEPDIR)/snes9x_gtk-stream.Po
#	$(AM_V_CXX)source='../stream.cpp' object='../snes9x_gtk-stream.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-stream.obj `if test -f '../stream.cpp'; then $(CYGPATH_W) '../stream.cpp'; else $(CYGPATH_W) '$(srcdir)/../stream.cpp'; fi`

../snes9x_gtk-conffile.o: ../conffile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-conffile.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-conffile.Tpo -c -o ../snes9x_gtk-conffile.o `test -f '../conffile.cpp' || echo '$(srcdir)/'`../conffile.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-conffile.Tpo ../$(DEPDIR)/snes9x_gtk-conffile.Po
#	$(AM_V_CXX)source='../conffile.cpp' object='../snes9x_gtk-conffile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-conffile.o `test -f '../conffile.cpp' || echo '$(srcdir)/'`../conffile.cpp

../snes9x_gtk-conffile.obj: ../conffile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-conffile.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-conffile.Tpo -c -o ../snes9x_gtk-conffile.obj `if test -f '../conffile.cpp'; then $(CYGPATH_W) '../conffile.cpp'; else $(CYGPATH_W) '$(srcdir)/../conffile.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-conffile.Tpo ../$(DEPDIR)/snes9x_gtk-conffile.Po
#	$(AM_V_CXX)source='../conffile.cpp' object='../snes9x_gtk-conffile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-conffile.obj `if test -f '../conffile.cpp'; then $(CYGPATH_W) '../conffile.cpp'; else $(CYGPATH_W) '$(srcdir)/../conffile.cpp'; fi`

../snes9x_gtk-bsx.o: ../bsx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-bsx.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-bsx.Tpo -c -o ../snes9x_gtk-bsx.o `test -f '../bsx.cpp' || echo '$(srcdir)/'`../bsx.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-bsx.Tpo ../$(DEPDIR)/snes9x_gtk-bsx.Po
#	$(AM_V_CXX)source='../bsx.cpp' object='../snes9x_gtk-bsx.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-bsx.o `test -f '../bsx.cpp' || echo '$(srcdir)/'`../bsx.cpp

../snes9x_gtk-bsx.obj: ../bsx.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-bsx.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-bsx.Tpo -c -o ../snes9x_gtk-bsx.obj `if test -f '../bsx.cpp'; then $(CYGPATH_W) '../bsx.cpp'; else $(CYGPATH_W) '$(srcdir)/../bsx.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-bsx.Tpo ../$(DEPDIR)/snes9x_gtk-bsx.Po
#	$(AM_V_CXX)source='../bsx.cpp' object='../snes9x_gtk-bsx.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-bsx.obj `if test -f '../bsx.cpp'; then $(CYGPATH_W) '../bsx.cpp'; else $(CYGPATH_W) '$(srcdir)/../bsx.cpp'; fi`

../snes9x_gtk-logger.o: ../logger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-logger.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-logger.Tpo -c -o ../snes9x_gtk-logger.o `test -f '../logger.cpp' || echo '$(srcdir)/'`../logger.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-logger.Tpo ../$(DEPDIR)/snes9x_gtk-logger.Po
#	$(AM_V_CXX)source='../logger.cpp' object='../snes9x_gtk-logger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-logger.o `test -f '../logger.cpp' || echo '$(srcdir)/'`../logger.cpp

../snes9x_gtk-logger.obj: ../logger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-logger.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-logger.Tpo -c -o ../snes9x_gtk-logger.obj `if test -f '../logger.cpp'; then $(CYGPATH_W) '../logger.cpp'; else $(CYGPATH_W) '$(srcdir)/../logger.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-logger.Tpo ../$(DEPDIR)/snes9x_gtk-logger.Po
#	$(AM_V_CXX)source='../logger.cpp' object='../snes9x_gtk-logger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-logger.obj `if test -f '../logger.cpp'; then $(CYGPATH_W) '../logger.cpp'; else $(CYGPATH_W) '$(srcdir)/../logger.cpp'; fi`

../snes9x_gtk-snapshot.o: ../snapshot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-snapshot.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-snapshot.Tpo -c -o ../snes9x_gtk-snapshot.o `test -f '../snapshot.cpp' || echo '$(srcdir)/'`../snapshot.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-snapshot.Tpo ../$(DEPDIR)/snes9x_gtk-snapshot.Po
#	$(AM_V_CXX)source='../snapshot.cpp' object='../snes9x_gtk-snapshot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-snapshot.o `test -f '../snapshot.cpp' || echo '$(srcdir)/'`../snapshot.cpp

../snes9x_gtk-snapshot.obj: ../snapshot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-snapshot.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-snapshot.Tpo -c -o ../snes9x_gtk-snapshot.obj `if test -f '../snapshot.cpp'; then $(CYGPATH_W) '../snapshot.cpp'; else $(CYGPATH_W) '$(srcdir)/../snapshot.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-snapshot.Tpo ../$(DEPDIR)/snes9x_gtk-snapshot.Po
#	$(AM_V_CXX)source='../snapshot.cpp' object='../snes9x_gtk-snapshot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-snapshot.obj `if test -f '../snapshot.cpp'; then $(CYGPATH_W) '../snapshot.cpp'; else $(CYGPATH_W) '$(srcdir)/../snapshot.cpp'; fi`

../snes9x_gtk-screenshot.o: ../screenshot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-screenshot.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-screenshot.Tpo -c -o ../snes9x_gtk-screenshot.o `test -f '../screenshot.cpp' || echo '$(srcdir)/'`../screenshot.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-screenshot.Tpo ../$(DEPDIR)/snes9x_gtk-screenshot.Po
#	$(AM_V_CXX)source='../screenshot.cpp' object='../snes9x_gtk-screenshot.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-screenshot.o `test -f '../screenshot.cpp' || echo '$(srcdir)/'`../screenshot.cpp

../snes9x_gtk-screenshot.obj: ../screenshot.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-screenshot.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-screenshot.Tpo -c -o ../snes9x_gtk-screenshot.obj `if test -f '../screenshot.cpp'; then $(CYGPATH_W) '../screenshot.cpp'; else $(CYGPATH_W) '$(srcdir)/../screenshot.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-screenshot.Tpo ../$(DEPDIR)/snes9x_gtk-screenshot.Po
#	$(AM_V_CXX)source='../screenshot.cpp' object='../snes9x_gtk-screenshot.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-screenshot.obj `if test -f '../screenshot.cpp'; then $(CYGPATH_W) '../screenshot.cpp'; else $(CYGPATH_W) '$(srcdir)/../screenshot.cpp'; fi`

../snes9x_gtk-movie.o: ../movie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-movie.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-movie.Tpo -c -o ../snes9x_gtk-movie.o `test -f '../movie.cpp' || echo '$(srcdir)/'`../movie.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-movie.Tpo ../$(DEPDIR)/snes9x_gtk-movie.Po
#	$(AM_V_CXX)source='../movie.cpp' object='../snes9x_gtk-movie.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-movie.o `test -f '../movie.cpp' || echo '$(srcdir)/'`../movie.cpp

../snes9x_gtk-movie.obj: ../movie.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-movie.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-movie.Tpo -c -o ../snes9x_gtk-movie.obj `if test -f '../movie.cpp'; then $(CYGPATH_W) '../movie.cpp'; else $(CYGPATH_W) '$(srcdir)/../movie.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-movie.Tpo ../$(DEPDIR)/snes9x_gtk-movie.Po
#	$(AM_V_CXX)source='../movie.cpp' object='../snes9x_gtk-movie.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-movie.obj `if test -f '../movie.cpp'; then $(CYGPATH_W) '../movie.cpp'; else $(CYGPATH_W) '$(srcdir)/../movie.cpp'; fi`

../snes9x_gtk-cpuops.o: ../cpuops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cpuops.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cpuops.Tpo -c -o ../snes9x_gtk-cpuops.o `test -f '../cpuops.cpp' || echo '$(srcdir)/'`../cpuops.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cpuops.Tpo ../$(DEPDIR)/snes9x_gtk-cpuops.Po
#	$(AM_V_CXX)source='../cpuops.cpp' object='../snes9x_gtk-cpuops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cpuops.o `test -f '../cpuops.cpp' || echo '$(srcdir)/'`../cpuops.cpp

../snes9x_gtk-cpuops.obj: ../cpuops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cpuops.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cpuops.Tpo -c -o ../snes9x_gtk-cpuops.obj `if test -f '../cpuops.cpp'; then $(CYGPATH_W) '../cpuops.cpp'; else $(CYGPATH_W) '$(srcdir)/../cpuops.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cpuops.Tpo ../$(DEPDIR)/snes9x_gtk-cpuops.Po
#	$(AM_V_CXX)source='../cpuops.cpp' object='../snes9x_gtk-cpuops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cpuops.obj `if test -f '../cpuops.cpp'; then $(CYGPATH_W) '../cpuops.cpp'; else $(CYGPATH_W) '$(srcdir)/../cpuops.cpp'; fi`

../snes9x_gtk-cpuexec.o: ../cpuexec.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cpuexec.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cpuexec.Tpo -c -o ../snes9x_gtk-cpuexec.o `test -f '../cpuexec.cpp' || echo '$(srcdir)/'`../cpuexec.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cpuexec.Tpo ../$(DEPDIR)/snes9x_gtk-cpuexec.Po
#	$(AM_V_CXX)source='../cpuexec.cpp' object='../snes9x_gtk-cpuexec.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cpuexec.o `test -f '../cpuexec.cpp' || echo '$(srcdir)/'`../cpuexec.cpp

../snes9x_gtk-cpuexec.obj: ../cpuexec.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cpuexec.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cpuexec.Tpo -c -o ../snes9x_gtk-cpuexec.obj `if test -f '../cpuexec.cpp'; then $(CYGPATH_W) '../cpuexec.cpp'; else $(CYGPATH_W) '$(srcdir)/../cpuexec.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cpuexec.Tpo ../$(DEPDIR)/snes9x_gtk-cpuexec.Po
#	$(AM_V_CXX)source='../cpuexec.cpp' object='../snes9x_gtk-cpuexec.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cpuexec.obj `if test -f '../cpuexec.cpp'; then $(CYGPATH_W) '../cpuexec.cpp'; else $(CYGPATH_W) '$(srcdir)/../cpuexec.cpp'; fi`

../snes9x_gtk-sa1cpu.o: ../sa1cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sa1cpu.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sa1cpu.Tpo -c -o ../snes9x_gtk-sa1cpu.o `test -f '../sa1cpu.cpp' || echo '$(srcdir)/'`../sa1cpu.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sa1cpu.Tpo ../$(DEPDIR)/snes9x_gtk-sa1cpu.Po
#	$(AM_V_CXX)source='../sa1cpu.cpp' object='../snes9x_gtk-sa1cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sa1cpu.o `test -f '../sa1cpu.cpp' || echo '$(srcdir)/'`../sa1cpu.cpp

../snes9x_gtk-sa1cpu.obj: ../sa1cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sa1cpu.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sa1cpu.Tpo -c -o ../snes9x_gtk-sa1cpu.obj `if test -f '../sa1cpu.cpp'; then $(CYGPATH_W) '../sa1cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/../sa1cpu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sa1cpu.Tpo ../$(DEPDIR)/snes9x_gtk-sa1cpu.Po
#	$(AM_V_CXX)source='../sa1cpu.cpp' object='../snes9x_gtk-sa1cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sa1cpu.obj `if test -f '../sa1cpu.cpp'; then $(CYGPATH_W) '../sa1cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/../sa1cpu.cpp'; fi`

../snes9x_gtk-cheats.o: ../cheats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cheats.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cheats.Tpo -c -o ../snes9x_gtk-cheats.o `test -f '../cheats.cpp' || echo '$(srcdir)/'`../cheats.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cheats.Tpo ../$(DEPDIR)/snes9x_gtk-cheats.Po
#	$(AM_V_CXX)source='../cheats.cpp' object='../snes9x_gtk-cheats.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cheats.o `test -f '../cheats.cpp' || echo '$(srcdir)/'`../cheats.cpp

../snes9x_gtk-cheats.obj: ../cheats.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cheats.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cheats.Tpo -c -o ../snes9x_gtk-cheats.obj `if test -f '../cheats.cpp'; then $(CYGPATH_W) '../cheats.cpp'; else $(CYGPATH_W) '$(srcdir)/../cheats.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cheats.Tpo ../$(DEPDIR)/snes9x_gtk-cheats.Po
#	$(AM_V_CXX)source='../cheats.cpp' object='../snes9x_gtk-cheats.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cheats.obj `if test -f '../cheats.cpp'; then $(CYGPATH_W) '../cheats.cpp'; else $(CYGPATH_W) '$(srcdir)/../cheats.cpp'; fi`

../snes9x_gtk-cheats2.o: ../cheats2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cheats2.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cheats2.Tpo -c -o ../snes9x_gtk-cheats2.o `test -f '../cheats2.cpp' || echo '$(srcdir)/'`../cheats2.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cheats2.Tpo ../$(DEPDIR)/snes9x_gtk-cheats2.Po
#	$(AM_V_CXX)source='../cheats2.cpp' object='../snes9x_gtk-cheats2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cheats2.o `test -f '../cheats2.cpp' || echo '$(srcdir)/'`../cheats2.cpp

../snes9x_gtk-cheats2.obj: ../cheats2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-cheats2.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-cheats2.Tpo -c -o ../snes9x_gtk-cheats2.obj `if test -f '../cheats2.cpp'; then $(CYGPATH_W) '../cheats2.cpp'; else $(CYGPATH_W) '$(srcdir)/../cheats2.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-cheats2.Tpo ../$(DEPDIR)/snes9x_gtk-cheats2.Po
#	$(AM_V_CXX)source='../cheats2.cpp' object='../snes9x_gtk-cheats2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-cheats2.obj `if test -f '../cheats2.cpp'; then $(CYGPATH_W) '../cheats2.cpp'; else $(CYGPATH_W) '$(srcdir)/../cheats2.cpp'; fi`

../snes9x_gtk-sdd1emu.o: ../sdd1emu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sdd1emu.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sdd1emu.Tpo -c -o ../snes9x_gtk-sdd1emu.o `test -f '../sdd1emu.cpp' || echo '$(srcdir)/'`../sdd1emu.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sdd1emu.Tpo ../$(DEPDIR)/snes9x_gtk-sdd1emu.Po
#	$(AM_V_CXX)source='../sdd1emu.cpp' object='../snes9x_gtk-sdd1emu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sdd1emu.o `test -f '../sdd1emu.cpp' || echo '$(srcdir)/'`../sdd1emu.cpp

../snes9x_gtk-sdd1emu.obj: ../sdd1emu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-sdd1emu.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-sdd1emu.Tpo -c -o ../snes9x_gtk-sdd1emu.obj `if test -f '../sdd1emu.cpp'; then $(CYGPATH_W) '../sdd1emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../sdd1emu.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-sdd1emu.Tpo ../$(DEPDIR)/snes9x_gtk-sdd1emu.Po
#	$(AM_V_CXX)source='../sdd1emu.cpp' object='../snes9x_gtk-sdd1emu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-sdd1emu.obj `if test -f '../sdd1emu.cpp'; then $(CYGPATH_W) '../sdd1emu.cpp'; else $(CYGPATH_W) '$(srcdir)/../sdd1emu.cpp'; fi`

../snes9x_gtk-netplay.o: ../netplay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-netplay.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-netplay.Tpo -c -o ../snes9x_gtk-netplay.o `test -f '../netplay.cpp' || echo '$(srcdir)/'`../netplay.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-netplay.Tpo ../$(DEPDIR)/snes9x_gtk-netplay.Po
#	$(AM_V_CXX)source='../netplay.cpp' object='../snes9x_gtk-netplay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-netplay.o `test -f '../netplay.cpp' || echo '$(srcdir)/'`../netplay.cpp

../snes9x_gtk-netplay.obj: ../netplay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-netplay.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-netplay.Tpo -c -o ../snes9x_gtk-netplay.obj `if test -f '../netplay.cpp'; then $(CYGPATH_W) '../netplay.cpp'; else $(CYGPATH_W) '$(srcdir)/../netplay.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-netplay.Tpo ../$(DEPDIR)/snes9x_gtk-netplay.Po
#	$(AM_V_CXX)source='../netplay.cpp' object='../snes9x_gtk-netplay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-netplay.obj `if test -f '../netplay.cpp'; then $(CYGPATH_W) '../netplay.cpp'; else $(CYGPATH_W) '$(srcdir)/../netplay.cpp'; fi`

../snes9x_gtk-server.o: ../server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-server.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-server.Tpo -c -o ../snes9x_gtk-server.o `test -f '../server.cpp' || echo '$(srcdir)/'`../server.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-server.Tpo ../$(DEPDIR)/snes9x_gtk-server.Po
#	$(AM_V_CXX)source='../server.cpp' object='../snes9x_gtk-server.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-server.o `test -f '../server.cpp' || echo '$(srcdir)/'`../server.cpp

../snes9x_gtk-server.obj: ../server.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-server.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-server.Tpo -c -o ../snes9x_gtk-server.obj `if test -f '../server.cpp'; then $(CYGPATH_W) '../server.cpp'; else $(CYGPATH_W) '$(srcdir)/../server.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-server.Tpo ../$(DEPDIR)/snes9x_gtk-server.Po
#	$(AM_V_CXX)source='../server.cpp' object='../snes9x_gtk-server.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-server.obj `if test -f '../server.cpp'; then $(CYGPATH_W) '../server.cpp'; else $(CYGPATH_W) '$(srcdir)/../server.cpp'; fi`

../snes9x_gtk-loadzip.o: ../loadzip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-loadzip.o -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-loadzip.Tpo -c -o ../snes9x_gtk-loadzip.o `test -f '../loadzip.cpp' || echo '$(srcdir)/'`../loadzip.cpp
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-loadzip.Tpo ../$(DEPDIR)/snes9x_gtk-loadzip.Po
#	$(AM_V_CXX)source='../loadzip.cpp' object='../snes9x_gtk-loadzip.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-loadzip.o `test -f '../loadzip.cpp' || echo '$(srcdir)/'`../loadzip.cpp

../snes9x_gtk-loadzip.obj: ../loadzip.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT ../snes9x_gtk-loadzip.obj -MD -MP -MF ../$(DEPDIR)/snes9x_gtk-loadzip.Tpo -c -o ../snes9x_gtk-loadzip.obj `if test -f '../loadzip.cpp'; then $(CYGPATH_W) '../loadzip.cpp'; else $(CYGPATH_W) '$(srcdir)/../loadzip.cpp'; fi`
	$(AM_V_at)$(am__mv) ../$(DEPDIR)/snes9x_gtk-loadzip.Tpo ../$(DEPDIR)/snes9x_gtk-loadzip.Po
#	$(AM_V_CXX)source='../loadzip.cpp' object='../snes9x_gtk-loadzip.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o ../snes9x_gtk-loadzip.obj `if test -f '../loadzip.cpp'; then $(CYGPATH_W) '../loadzip.cpp'; else $(CYGPATH_W) '$(srcdir)/../loadzip.cpp'; fi`

src/snes9x_gtk-gtk_display_driver_opengl.o: src/gtk_display_driver_opengl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display_driver_opengl.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Tpo -c -o src/snes9x_gtk-gtk_display_driver_opengl.o `test -f 'src/gtk_display_driver_opengl.cpp' || echo '$(srcdir)/'`src/gtk_display_driver_opengl.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Po
#	$(AM_V_CXX)source='src/gtk_display_driver_opengl.cpp' object='src/snes9x_gtk-gtk_display_driver_opengl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display_driver_opengl.o `test -f 'src/gtk_display_driver_opengl.cpp' || echo '$(srcdir)/'`src/gtk_display_driver_opengl.cpp

src/snes9x_gtk-gtk_display_driver_opengl.obj: src/gtk_display_driver_opengl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display_driver_opengl.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Tpo -c -o src/snes9x_gtk-gtk_display_driver_opengl.obj `if test -f 'src/gtk_display_driver_opengl.cpp'; then $(CYGPATH_W) 'src/gtk_display_driver_opengl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display_driver_opengl.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_opengl.Po
#	$(AM_V_CXX)source='src/gtk_display_driver_opengl.cpp' object='src/snes9x_gtk-gtk_display_driver_opengl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display_driver_opengl.obj `if test -f 'src/gtk_display_driver_opengl.cpp'; then $(CYGPATH_W) 'src/gtk_display_driver_opengl.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display_driver_opengl.cpp'; fi`

src/snes9x_gtk-gtk_display_driver_xv.o: src/gtk_display_driver_xv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display_driver_xv.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Tpo -c -o src/snes9x_gtk-gtk_display_driver_xv.o `test -f 'src/gtk_display_driver_xv.cpp' || echo '$(srcdir)/'`src/gtk_display_driver_xv.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Po
#	$(AM_V_CXX)source='src/gtk_display_driver_xv.cpp' object='src/snes9x_gtk-gtk_display_driver_xv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display_driver_xv.o `test -f 'src/gtk_display_driver_xv.cpp' || echo '$(srcdir)/'`src/gtk_display_driver_xv.cpp

src/snes9x_gtk-gtk_display_driver_xv.obj: src/gtk_display_driver_xv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_display_driver_xv.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Tpo -c -o src/snes9x_gtk-gtk_display_driver_xv.obj `if test -f 'src/gtk_display_driver_xv.cpp'; then $(CYGPATH_W) 'src/gtk_display_driver_xv.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display_driver_xv.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_display_driver_xv.Po
#	$(AM_V_CXX)source='src/gtk_display_driver_xv.cpp' object='src/snes9x_gtk-gtk_display_driver_xv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_display_driver_xv.obj `if test -f 'src/gtk_display_driver_xv.cpp'; then $(CYGPATH_W) 'src/gtk_display_driver_xv.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_display_driver_xv.cpp'; fi`

src/snes9x_gtk-gtk_netplay_dialog.o: src/gtk_netplay_dialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_netplay_dialog.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Tpo -c -o src/snes9x_gtk-gtk_netplay_dialog.o `test -f 'src/gtk_netplay_dialog.cpp' || echo '$(srcdir)/'`src/gtk_netplay_dialog.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Po
#	$(AM_V_CXX)source='src/gtk_netplay_dialog.cpp' object='src/snes9x_gtk-gtk_netplay_dialog.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_netplay_dialog.o `test -f 'src/gtk_netplay_dialog.cpp' || echo '$(srcdir)/'`src/gtk_netplay_dialog.cpp

src/snes9x_gtk-gtk_netplay_dialog.obj: src/gtk_netplay_dialog.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_netplay_dialog.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Tpo -c -o src/snes9x_gtk-gtk_netplay_dialog.obj `if test -f 'src/gtk_netplay_dialog.cpp'; then $(CYGPATH_W) 'src/gtk_netplay_dialog.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_netplay_dialog.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_netplay_dialog.Po
#	$(AM_V_CXX)source='src/gtk_netplay_dialog.cpp' object='src/snes9x_gtk-gtk_netplay_dialog.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_netplay_dialog.obj `if test -f 'src/gtk_netplay_dialog.cpp'; then $(CYGPATH_W) 'src/gtk_netplay_dialog.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_netplay_dialog.cpp'; fi`

src/snes9x_gtk-gtk_netplay.o: src/gtk_netplay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_netplay.o -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Tpo -c -o src/snes9x_gtk-gtk_netplay.o `test -f 'src/gtk_netplay.cpp' || echo '$(srcdir)/'`src/gtk_netplay.cpp
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Po
#	$(AM_V_CXX)source='src/gtk_netplay.cpp' object='src/snes9x_gtk-gtk_netplay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_netplay.o `test -f 'src/gtk_netplay.cpp' || echo '$(srcdir)/'`src/gtk_netplay.cpp

src/snes9x_gtk-gtk_netplay.obj: src/gtk_netplay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -MT src/snes9x_gtk-gtk_netplay.obj -MD -MP -MF src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Tpo -c -o src/snes9x_gtk-gtk_netplay.obj `if test -f 'src/gtk_netplay.cpp'; then $(CYGPATH_W) 'src/gtk_netplay.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_netplay.cpp'; fi`
	$(AM_V_at)$(am__mv) src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Tpo src/$(DEPDIR)/snes9x_gtk-gtk_netplay.Po
#	$(AM_V_CXX)source='src/gtk_netplay.cpp' object='src/snes9x_gtk-gtk_netplay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(snes9x_gtk_CXXFLAGS) $(CXXFLAGS) -c -o src/snes9x_gtk-gtk_netplay.obj `if test -f 'src/gtk_netplay.cpp'; then $(CYGPATH_W) 'src/gtk_netplay.cpp'; else $(CYGPATH_W) '$(srcdir)/src/gtk_netplay.cpp'; fi`

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build \
	  && ../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f ../$(DEPDIR)/$(am__dirstamp)
	-rm -f ../$(am__dirstamp)
	-rm -f ../apu/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../apu/$(am__dirstamp)
	-rm -f ../apu/bapu/dsp/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../apu/bapu/dsp/$(am__dirstamp)
	-rm -f ../apu/bapu/smp/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../apu/bapu/smp/$(am__dirstamp)
	-rm -f ../filter/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../filter/$(am__dirstamp)
	-rm -f ../i386/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../i386/$(am__dirstamp)
	-rm -f ../jma/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../jma/$(am__dirstamp)
	-rm -f ../unzip/$(DEPDIR)/$(am__dirstamp)
	-rm -f ../unzip/$(am__dirstamp)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ../$(DEPDIR) ../apu/$(DEPDIR) ../apu/bapu/dsp/$(DEPDIR) ../apu/bapu/smp/$(DEPDIR) ../filter/$(DEPDIR) ../jma/$(DEPDIR) ../unzip/$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ../$(DEPDIR) ../apu/$(DEPDIR) ../apu/bapu/dsp/$(DEPDIR) ../apu/bapu/smp/$(DEPDIR) ../filter/$(DEPDIR) ../jma/$(DEPDIR) ../unzip/$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--refresh check check-am clean clean-binPROGRAMS \
	clean-cscope clean-generic clean-noinstLIBRARIES cscope \
	cscopelist-am ctags ctags-am dist dist-all dist-bzip2 \
	dist-gzip dist-lzip dist-shar dist-tarZ dist-xz dist-zip \
	distcheck distclean distclean-compile distclean-generic \
	distclean-tags distcleancheck distdir distuninstallcheck dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS


src/sourcify: src/sourcify.c
	$(CC) src/sourcify.c -o src/sourcify

src/gtk_snes9x_ui.cpp: src/sourcify src/snes9x.ui
	src/sourcify src/snes9x.ui src/gtk_snes9x_ui.cpp snes9x_ui

.asm.o:
	$(NASM) -f elf -DELF $(NASM_FLAGS) -i ./ -i ../ -i ../i386/ -i i386/ -o $@ $*.asm

.ASM.o:
	$(NASM) -f elf -DELF $(NASM_FLAGS) -i ./ -i ../ -i ../i386/ -i i386/ $*.ASM -o $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
